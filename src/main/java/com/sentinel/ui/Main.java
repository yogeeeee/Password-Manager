package com.sentinel.ui;

import javax.swing.JOptionPane;

/**
 *
 * @author Yogesh malviya
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        Version = "0.9.0";
        Vault_Table_Name = "Root";
        com.sentinel.internal.SQLite.initVaultList();
        javax.swing.UIManager.put("Tree.showDefaultIcons", true);
        javax.swing.UIManager.put("Tree.leafIcon", new javax.swing.ImageIcon(getClass().getResource("/images/folder-closed.png")));
        javax.swing.UIManager.put("Tree.openIcon", new javax.swing.ImageIcon(getClass().getResource("/images/folder-opened.png")));
        javax.swing.UIManager.put("Tree.closedIcon", new javax.swing.ImageIcon(getClass().getResource("/images/folder-closed.png")));
        initComponents();
        Container_Deck = (java.awt.CardLayout)Container.getLayout();
        if (!com.sentinel.internal.SQLite.getVaultList().isEmpty())
            Open_Vault_ActionPerformed(com.sentinel.internal.SQLite.getVaultList().firstElement());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Passwords_Table_PopupMenu = new javax.swing.JPopupMenu();
        Table_PopupMenu_New_Entry = new javax.swing.JMenuItem();
        Table_PopupMenu_Edit_Entry = new javax.swing.JMenuItem();
        Table_PopupMenu_Delete_Entry = new javax.swing.JMenuItem();
        Table_PopupMenu_Separator = new javax.swing.JPopupMenu.Separator();
        Table_PopupMenu_Copy_Username = new javax.swing.JMenuItem();
        Table_PopupMenu_Copy_Password = new javax.swing.JMenuItem();
        Table_PopupMenu_Copy_URL = new javax.swing.JMenuItem();
        FolderTree_PopupMenu = new javax.swing.JPopupMenu();
        Tree_PopupMenu_New_Group = new javax.swing.JMenuItem();
        Tree_PopupMenu_Edit_Group = new javax.swing.JMenuItem();
        Tree_PopupMenu_Delete_Group = new javax.swing.JMenuItem();
        Key_File_ButtonGroup = new javax.swing.ButtonGroup();
        Main_ToolBar = new javax.swing.JToolBar();
        Open_Vault_Button = new javax.swing.JButton();
        Close_Vault_Button = new javax.swing.JButton();
        ToolBar_Separator_One = new javax.swing.JToolBar.Separator();
        New_Entry_Button = new javax.swing.JButton();
        Edit_Entry_Button = new javax.swing.JButton();
        Delete_Entry_Button = new javax.swing.JButton();
        ToolBar_Separator_Two = new javax.swing.JToolBar.Separator();
        Copy_Username_Button = new javax.swing.JButton();
        Copy_Password_Button = new javax.swing.JButton();
        Copy_URL_Button = new javax.swing.JButton();
        Password_Generator_Button = new javax.swing.JButton();
        ToolBar_Separator_Three = new javax.swing.JToolBar.Separator();
        Settings_ToggleButton = new javax.swing.JToggleButton();
        About_Button = new javax.swing.JButton();
        ToolBar_Filler = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        Acknowledgment_Label = new javax.swing.JLabel();
        Container = new javax.swing.JPanel();
        StartPage = new javax.swing.JPanel();
        Welcome_Label = new javax.swing.JLabel();
        Vault_Actions_Panel = new javax.swing.JPanel();
        StartPage_Create_Vault_Button = new javax.swing.JButton();
        StartPage_Open_Vault_Button = new javax.swing.JButton();
        Recent_Vaults_Label = new javax.swing.JLabel();
        Recent_Vaults_ScrollPane = new javax.swing.JScrollPane();
        Recent_Vaults_List = new javax.swing.JList<>();
        Clear_List_Button = new javax.swing.JButton();
        OpenVaultPage = new javax.swing.JPanel();
        OpenVault_Label = new javax.swing.JLabel();
        OpenVault_Container = new javax.swing.JPanel();
        Vault_Path_Label = new javax.swing.JLabel();
        Vault_Path_Field = new javax.swing.JTextField();
        OpenVault_Password_Label = new javax.swing.JLabel();
        OpenVault_Password_Field = new javax.swing.JPasswordField();
        OpenVault_Password_ToggleButton = new javax.swing.JToggleButton();
        OpenVault_Key_File_Label = new javax.swing.JLabel();
        OpenVault_Key_File_CheckBox = new javax.swing.JCheckBox();
        OpenVault_Key_File_Location_Field = new javax.swing.JPasswordField();
        OpenVault_Key_File_ToggleButton = new javax.swing.JToggleButton();
        OpenVault_Key_File_Browse_Button = new javax.swing.JButton();
        Close_Button = new javax.swing.JButton();
        Unlock_Button = new javax.swing.JButton();
        NewVaultPage = new javax.swing.JPanel();
        NewVault_Label = new javax.swing.JLabel();
        NewVault_Container = new javax.swing.JPanel();
        Vault_Name_Label = new javax.swing.JLabel();
        Vault_Name_Field = new javax.swing.JTextField();
        Vault_Password_Label = new javax.swing.JLabel();
        Vault_Password_Field = new javax.swing.JPasswordField();
        Vault_Password_ToggleButton = new javax.swing.JToggleButton();
        Generate_Vault_Password_Button = new javax.swing.JButton();
        Confirm_Password_Label = new javax.swing.JLabel();
        Confirm_Password_Field = new javax.swing.JPasswordField();
        Confirm_Password_ToggleButton = new javax.swing.JToggleButton();
        Vault_Location_Label = new javax.swing.JLabel();
        Vault_Location_Field = new javax.swing.JTextField();
        Browse_Button = new javax.swing.JButton();
        Key_File_Label = new javax.swing.JLabel();
        Key_File_CheckBox = new javax.swing.JCheckBox();
        Key_File_Location_Field = new javax.swing.JTextField();
        Key_File_Browse_Button = new javax.swing.JButton();
        NewVault_Cancel_Button = new javax.swing.JButton();
        NewVault_Finish_Button = new javax.swing.JButton();
        VaultPage = new javax.swing.JPanel();
        FolderTree_ScrollPane = new javax.swing.JScrollPane();
        FolderTree = new javax.swing.JTree();
        Passwords_Table_ScrollPane = new javax.swing.JScrollPane();
        Passwords_Table = new javax.swing.JTable();
        Details_Panel = new javax.swing.JPanel();
        Details_Username_Panel = new javax.swing.JPanel();
        Details_Username_Field = new javax.swing.JTextField();
        Details_Password_Panel = new javax.swing.JPanel();
        Details_Password_Field = new javax.swing.JPasswordField();
        Details_Password_ToggleButton = new javax.swing.JToggleButton();
        Details_URL_Panel = new javax.swing.JPanel();
        Details_URL_Field = new javax.swing.JTextField();
        Details_Notes_ScrollPane = new javax.swing.JScrollPane();
        Details_Notes_TextArea = new javax.swing.JTextArea();
        EntryPage = new javax.swing.JPanel();
        EntryPage_Label = new javax.swing.JLabel();
        EntryPage_Container = new javax.swing.JPanel();
        Title_Label = new javax.swing.JLabel();
        Title_TextField = new javax.swing.JTextField();
        Username_Label = new javax.swing.JLabel();
        Username_TextField = new javax.swing.JTextField();
        Password_Label = new javax.swing.JLabel();
        Password_Field = new javax.swing.JPasswordField();
        Password_Field_ToggleButton = new javax.swing.JToggleButton();
        Generate_Password_Button = new javax.swing.JButton();
        URL_Label = new javax.swing.JLabel();
        URL_TextField = new javax.swing.JTextField();
        Notes_Label = new javax.swing.JLabel();
        Notes_ScrollPane = new javax.swing.JScrollPane();
        Notes_TextArea = new javax.swing.JTextArea();
        EntryPage_Cancel_Button = new javax.swing.JButton();
        EntryPage_Finish_Button = new javax.swing.JButton();
        SettingsPage = new javax.swing.JPanel();
        Settings_Vault_Name_Panel = new javax.swing.JPanel();
        Settings_Vault_Name_Label = new javax.swing.JLabel();
        Settings_Vault_Name_Field = new javax.swing.JTextField();
        Change_Vault_Name_Button = new javax.swing.JButton();
        Settings_Password_Panel = new javax.swing.JPanel();
        Settings_New_Password_Label = new javax.swing.JLabel();
        Settings_New_Password_Field = new javax.swing.JPasswordField();
        Settings_New_Password_ToggleButton = new javax.swing.JToggleButton();
        Generate_New_Password_Button = new javax.swing.JButton();
        Settings_Confirm_Password_Label = new javax.swing.JLabel();
        Settings_Confirm_Password_Field = new javax.swing.JPasswordField();
        Settings_Confirm_Password_ToggleButton = new javax.swing.JToggleButton();
        Change_Password_Button = new javax.swing.JButton();
        Settings_Key_File_Panel = new javax.swing.JPanel();
        Current_Key_File_Label = new javax.swing.JLabel();
        Current_Key_File_Location_Field = new javax.swing.JTextField();
        Current_Password_Label = new javax.swing.JLabel();
        Current_Password_Field = new javax.swing.JPasswordField();
        Current_Password_ToggleButton = new javax.swing.JToggleButton();
        New_Key_File_Label = new javax.swing.JLabel();
        New_Key_File_Location_Field = new javax.swing.JTextField();
        New_Key_File_Browse_Button = new javax.swing.JButton();
        New_Key_RadioButton = new javax.swing.JRadioButton();
        Existing_Key_RadioButton = new javax.swing.JRadioButton();
        Remove_Key_RadioButton = new javax.swing.JRadioButton();
        Change_Key_Button = new javax.swing.JButton();
        Menu_Bar = new javax.swing.JMenuBar();
        Vault_Menu = new javax.swing.JMenu();
        New_Vault_MenuItem = new javax.swing.JMenuItem();
        Open_Vault_MenuItem = new javax.swing.JMenuItem();
        Close_Vault_MenuItem = new javax.swing.JMenuItem();
        Vault_Menu_Separator_One = new javax.swing.JPopupMenu.Separator();
        Exit_MenuItem = new javax.swing.JMenuItem();
        Edit_Menu = new javax.swing.JMenu();
        New_Entry_MenuItem = new javax.swing.JMenuItem();
        Edit_Entry_MenuItem = new javax.swing.JMenuItem();
        Delete_Entry_MenuItem = new javax.swing.JMenuItem();
        Edit_Menu_Separator_One = new javax.swing.JPopupMenu.Separator();
        New_Group_MenuItem = new javax.swing.JMenuItem();
        Edit_Group_MenuItem = new javax.swing.JMenuItem();
        Delete_Group_MenuItem = new javax.swing.JMenuItem();
        Edit_Menu_Separator_Two = new javax.swing.JPopupMenu.Separator();
        Copy_Username_MenuItem = new javax.swing.JMenuItem();
        Copy_Password_MenuItem = new javax.swing.JMenuItem();
        Copy_URL_MenuItem = new javax.swing.JMenuItem();
        Tools_Menu = new javax.swing.JMenu();
        Password_Generator_MenuItem = new javax.swing.JMenuItem();
        Settings_CheckBox_MenuItem = new javax.swing.JCheckBoxMenuItem();
        Help_Menu = new javax.swing.JMenu();
        About_MenuItem = new javax.swing.JMenuItem();

        Table_PopupMenu_New_Entry.setText("New Entry");
        Table_PopupMenu_New_Entry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table_PopupMenu_New_EntryActionPerformed(evt);
            }
        });
        Passwords_Table_PopupMenu.add(Table_PopupMenu_New_Entry);

        Table_PopupMenu_Edit_Entry.setText("Edit Entry");
        Table_PopupMenu_Edit_Entry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table_PopupMenu_Edit_EntryActionPerformed(evt);
            }
        });
        Passwords_Table_PopupMenu.add(Table_PopupMenu_Edit_Entry);

        Table_PopupMenu_Delete_Entry.setText("Delete Entry");
        Table_PopupMenu_Delete_Entry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table_PopupMenu_Delete_EntryActionPerformed(evt);
            }
        });
        Passwords_Table_PopupMenu.add(Table_PopupMenu_Delete_Entry);
        Passwords_Table_PopupMenu.add(Table_PopupMenu_Separator);

        Table_PopupMenu_Copy_Username.setText("Copy Username");
        Table_PopupMenu_Copy_Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table_PopupMenu_Copy_UsernameActionPerformed(evt);
            }
        });
        Passwords_Table_PopupMenu.add(Table_PopupMenu_Copy_Username);

        Table_PopupMenu_Copy_Password.setText("Copy Password");
        Table_PopupMenu_Copy_Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table_PopupMenu_Copy_PasswordActionPerformed(evt);
            }
        });
        Passwords_Table_PopupMenu.add(Table_PopupMenu_Copy_Password);

        Table_PopupMenu_Copy_URL.setText("Copy URL");
        Table_PopupMenu_Copy_URL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table_PopupMenu_Copy_URLActionPerformed(evt);
            }
        });
        Passwords_Table_PopupMenu.add(Table_PopupMenu_Copy_URL);

        Tree_PopupMenu_New_Group.setText("New Group");
        Tree_PopupMenu_New_Group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tree_PopupMenu_New_GroupActionPerformed(evt);
            }
        });
        FolderTree_PopupMenu.add(Tree_PopupMenu_New_Group);

        Tree_PopupMenu_Edit_Group.setText("Edit Group");
        Tree_PopupMenu_Edit_Group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tree_PopupMenu_Edit_GroupActionPerformed(evt);
            }
        });
        FolderTree_PopupMenu.add(Tree_PopupMenu_Edit_Group);

        Tree_PopupMenu_Delete_Group.setText("Delete Group");
        Tree_PopupMenu_Delete_Group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tree_PopupMenu_Delete_GroupActionPerformed(evt);
            }
        });
        FolderTree_PopupMenu.add(Tree_PopupMenu_Delete_Group);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sentinel");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/images/app-icon.png")).getImage());
        setMinimumSize(new java.awt.Dimension(1000, 600));

        Main_ToolBar.setRollover(true);

        Open_Vault_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open.png"))); // NOI18N
        Open_Vault_Button.setToolTipText("Open Existing Vault");
        Open_Vault_Button.setFocusable(false);
        Open_Vault_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Open_Vault_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Open_Vault_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Open_Vault_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(Open_Vault_Button);

        Close_Vault_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/unlock.png"))); // NOI18N
        Close_Vault_Button.setToolTipText("Close Vault");
        Close_Vault_Button.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lock-disabled.png"))); // NOI18N
        Close_Vault_Button.setEnabled(false);
        Close_Vault_Button.setFocusable(false);
        Close_Vault_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Close_Vault_Button.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lock.png"))); // NOI18N
        Close_Vault_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Close_Vault_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Close_Vault_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(Close_Vault_Button);
        Main_ToolBar.add(ToolBar_Separator_One);

        New_Entry_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        New_Entry_Button.setToolTipText("Add a New Entry");
        New_Entry_Button.setEnabled(false);
        New_Entry_Button.setFocusable(false);
        New_Entry_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        New_Entry_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        New_Entry_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_Entry_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(New_Entry_Button);

        Edit_Entry_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        Edit_Entry_Button.setToolTipText("Edit an Entry");
        Edit_Entry_Button.setEnabled(false);
        Edit_Entry_Button.setFocusable(false);
        Edit_Entry_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Edit_Entry_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Edit_Entry_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_Entry_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(Edit_Entry_Button);

        Delete_Entry_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cross.png"))); // NOI18N
        Delete_Entry_Button.setToolTipText("Delete an Entry");
        Delete_Entry_Button.setEnabled(false);
        Delete_Entry_Button.setFocusable(false);
        Delete_Entry_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Delete_Entry_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Delete_Entry_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Entry_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(Delete_Entry_Button);
        Main_ToolBar.add(ToolBar_Separator_Two);

        Copy_Username_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N
        Copy_Username_Button.setToolTipText("Copy Username");
        Copy_Username_Button.setEnabled(false);
        Copy_Username_Button.setFocusable(false);
        Copy_Username_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Copy_Username_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Copy_Username_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy_Username_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(Copy_Username_Button);

        Copy_Password_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/key.png"))); // NOI18N
        Copy_Password_Button.setToolTipText("Copy Password");
        Copy_Password_Button.setEnabled(false);
        Copy_Password_Button.setFocusable(false);
        Copy_Password_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Copy_Password_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Copy_Password_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy_Password_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(Copy_Password_Button);

        Copy_URL_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/globe.png"))); // NOI18N
        Copy_URL_Button.setToolTipText("Copy URL");
        Copy_URL_Button.setEnabled(false);
        Copy_URL_Button.setFocusable(false);
        Copy_URL_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Copy_URL_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Copy_URL_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy_URL_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(Copy_URL_Button);

        Password_Generator_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/electronics.png"))); // NOI18N
        Password_Generator_Button.setToolTipText("Password Generator");
        Password_Generator_Button.setFocusable(false);
        Password_Generator_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Password_Generator_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Password_Generator_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Password_Generator_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(Password_Generator_Button);
        Main_ToolBar.add(ToolBar_Separator_Three);

        Settings_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N
        Settings_ToggleButton.setEnabled(false);
        Settings_ToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Settings_ToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Settings_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Settings_ToggleButtonItemStateChanged(evt);
            }
        });
        Main_ToolBar.add(Settings_ToggleButton);

        About_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/info.png"))); // NOI18N
        About_Button.setToolTipText("About Sentinel");
        About_Button.setFocusable(false);
        About_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        About_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        About_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                About_ButtonActionPerformed(evt);
            }
        });
        Main_ToolBar.add(About_Button);
        Main_ToolBar.add(ToolBar_Filler);
        Main_ToolBar.add(Acknowledgment_Label);

        Container.setLayout(new java.awt.CardLayout());

        Welcome_Label.setFont(Welcome_Label.getFont().deriveFont(Welcome_Label.getFont().getSize()+24f));
        Welcome_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Welcome_Label.setText("Welcome to Sentinel");

        Vault_Actions_Panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        StartPage_Create_Vault_Button.setFont(StartPage_Create_Vault_Button.getFont().deriveFont(StartPage_Create_Vault_Button.getFont().getStyle() | java.awt.Font.BOLD, StartPage_Create_Vault_Button.getFont().getSize()+2));
        StartPage_Create_Vault_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vault.png"))); // NOI18N
        StartPage_Create_Vault_Button.setText("Create New Vault");
        StartPage_Create_Vault_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartPage_Create_Vault_ButtonActionPerformed(evt);
            }
        });

        StartPage_Open_Vault_Button.setFont(StartPage_Open_Vault_Button.getFont().deriveFont(StartPage_Open_Vault_Button.getFont().getStyle() | java.awt.Font.BOLD, StartPage_Open_Vault_Button.getFont().getSize()+2));
        StartPage_Open_Vault_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open.png"))); // NOI18N
        StartPage_Open_Vault_Button.setText("Open Existing Vault");
        StartPage_Open_Vault_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartPage_Open_Vault_ButtonActionPerformed(evt);
            }
        });

        Recent_Vaults_Label.setFont(Recent_Vaults_Label.getFont().deriveFont(Recent_Vaults_Label.getFont().getStyle() | java.awt.Font.BOLD));
        Recent_Vaults_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Recent_Vaults_Label.setText("Recent Vaults");

        Recent_Vaults_List.setModel(com.sentinel.internal.SQLite.getVaultList());
        Recent_Vaults_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Recent_Vaults_ListMouseClicked(evt);
            }
        });
        Recent_Vaults_ScrollPane.setViewportView(Recent_Vaults_List);

        Clear_List_Button.setText("Clear Vaults List");
        Clear_List_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_List_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Vault_Actions_PanelLayout = new javax.swing.GroupLayout(Vault_Actions_Panel);
        Vault_Actions_Panel.setLayout(Vault_Actions_PanelLayout);
        Vault_Actions_PanelLayout.setHorizontalGroup(
            Vault_Actions_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Vault_Actions_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Vault_Actions_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Recent_Vaults_ScrollPane)
                    .addGroup(Vault_Actions_PanelLayout.createSequentialGroup()
                        .addComponent(StartPage_Create_Vault_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StartPage_Open_Vault_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Recent_Vaults_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(Vault_Actions_PanelLayout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(Clear_List_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Vault_Actions_PanelLayout.setVerticalGroup(
            Vault_Actions_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Vault_Actions_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Vault_Actions_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartPage_Create_Vault_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartPage_Open_Vault_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Recent_Vaults_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Recent_Vaults_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Clear_List_Button)
                .addContainerGap())
        );

        javax.swing.GroupLayout StartPageLayout = new javax.swing.GroupLayout(StartPage);
        StartPage.setLayout(StartPageLayout);
        StartPageLayout.setHorizontalGroup(
            StartPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StartPageLayout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addGroup(StartPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Vault_Actions_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Welcome_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(160, Short.MAX_VALUE))
        );
        StartPageLayout.setVerticalGroup(
            StartPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StartPageLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(Welcome_Label)
                .addGap(18, 18, 18)
                .addComponent(Vault_Actions_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        Container.add(StartPage, "start");

        OpenVault_Label.setFont(OpenVault_Label.getFont().deriveFont(OpenVault_Label.getFont().getSize()+12f));
        OpenVault_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OpenVault_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vault.png"))); // NOI18N
        OpenVault_Label.setText(" Unlock Vault");

        OpenVault_Container.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Vault_Path_Label.setFont(Vault_Path_Label.getFont().deriveFont(Vault_Path_Label.getFont().getSize()+2f));
        Vault_Path_Label.setText("Vault Path");

        Vault_Path_Field.setEditable(false);

        OpenVault_Password_Label.setFont(OpenVault_Password_Label.getFont().deriveFont(OpenVault_Password_Label.getFont().getSize()+2f));
        OpenVault_Password_Label.setText("Vault Password");

        OpenVault_Password_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N
        OpenVault_Password_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OpenVault_Password_ToggleButtonItemStateChanged(evt);
            }
        });

        OpenVault_Key_File_Label.setFont(OpenVault_Key_File_Label.getFont().deriveFont(OpenVault_Key_File_Label.getFont().getSize()+2f));
        OpenVault_Key_File_Label.setText("Key File");

        OpenVault_Key_File_CheckBox.setFont(OpenVault_Key_File_CheckBox.getFont().deriveFont(OpenVault_Key_File_CheckBox.getFont().getSize()+2f));
        OpenVault_Key_File_CheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OpenVault_Key_File_CheckBoxItemStateChanged(evt);
            }
        });

        OpenVault_Key_File_Location_Field.setEnabled(false);

        OpenVault_Key_File_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N
        OpenVault_Key_File_ToggleButton.setEnabled(false);
        OpenVault_Key_File_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OpenVault_Key_File_ToggleButtonItemStateChanged(evt);
            }
        });

        OpenVault_Key_File_Browse_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/folder.png"))); // NOI18N
        OpenVault_Key_File_Browse_Button.setEnabled(false);
        OpenVault_Key_File_Browse_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenVault_Key_File_Browse_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OpenVault_ContainerLayout = new javax.swing.GroupLayout(OpenVault_Container);
        OpenVault_Container.setLayout(OpenVault_ContainerLayout);
        OpenVault_ContainerLayout.setHorizontalGroup(
            OpenVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpenVault_ContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OpenVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(OpenVault_Password_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Vault_Path_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(OpenVault_ContainerLayout.createSequentialGroup()
                        .addComponent(OpenVault_Key_File_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OpenVault_Key_File_CheckBox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OpenVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Vault_Path_Field)
                    .addGroup(OpenVault_ContainerLayout.createSequentialGroup()
                        .addComponent(OpenVault_Password_Field)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OpenVault_Password_ToggleButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OpenVault_ContainerLayout.createSequentialGroup()
                        .addComponent(OpenVault_Key_File_Location_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OpenVault_Key_File_ToggleButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OpenVault_Key_File_Browse_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        OpenVault_ContainerLayout.setVerticalGroup(
            OpenVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpenVault_ContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OpenVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Vault_Path_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(Vault_Path_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OpenVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(OpenVault_ContainerLayout.createSequentialGroup()
                        .addGroup(OpenVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(OpenVault_Password_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(OpenVault_Password_ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(1, 1, 1))
                    .addComponent(OpenVault_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OpenVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OpenVault_ContainerLayout.createSequentialGroup()
                        .addGroup(OpenVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(OpenVault_Key_File_CheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(OpenVault_Key_File_Browse_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OpenVault_Key_File_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(OpenVault_Key_File_Location_Field, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(OpenVault_Key_File_ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        Close_Button.setFont(Close_Button.getFont().deriveFont(Close_Button.getFont().getSize()+2f));
        Close_Button.setText("Close");
        Close_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Close_ButtonActionPerformed(evt);
            }
        });

        Unlock_Button.setFont(Unlock_Button.getFont().deriveFont(Unlock_Button.getFont().getSize()+2f));
        Unlock_Button.setText("Unlock");
        Unlock_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Unlock_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OpenVaultPageLayout = new javax.swing.GroupLayout(OpenVaultPage);
        OpenVaultPage.setLayout(OpenVaultPageLayout);
        OpenVaultPageLayout.setHorizontalGroup(
            OpenVaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpenVaultPageLayout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addGroup(OpenVaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(OpenVaultPageLayout.createSequentialGroup()
                        .addComponent(Close_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(560, 560, 560)
                        .addComponent(Unlock_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(OpenVault_Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(OpenVault_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        OpenVaultPageLayout.setVerticalGroup(
            OpenVaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpenVaultPageLayout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addComponent(OpenVault_Label)
                .addGap(18, 18, 18)
                .addComponent(OpenVault_Container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(OpenVaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Unlock_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(Close_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(164, Short.MAX_VALUE))
        );

        Container.add(OpenVaultPage, "open");

        NewVault_Label.setFont(NewVault_Label.getFont().deriveFont(NewVault_Label.getFont().getSize()+12f));
        NewVault_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NewVault_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vault.png"))); // NOI18N
        NewVault_Label.setText(" Create New Vault");

        NewVault_Container.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Vault_Name_Label.setFont(Vault_Name_Label.getFont().deriveFont(Vault_Name_Label.getFont().getSize()+2f));
        Vault_Name_Label.setText("Vault Name");

        Vault_Password_Label.setFont(Vault_Password_Label.getFont().deriveFont(Vault_Password_Label.getFont().getSize()+2f));
        Vault_Password_Label.setText("Vault Password");

        Vault_Password_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N
        Vault_Password_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Vault_Password_ToggleButtonItemStateChanged(evt);
            }
        });

        Generate_Vault_Password_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dice-5.png"))); // NOI18N
        Generate_Vault_Password_Button.setToolTipText("");
        Generate_Vault_Password_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Generate_Vault_Password_ButtonActionPerformed(evt);
            }
        });

        Confirm_Password_Label.setFont(Confirm_Password_Label.getFont().deriveFont(Confirm_Password_Label.getFont().getSize()+2f));
        Confirm_Password_Label.setText("Confirm Password");

        Confirm_Password_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N
        Confirm_Password_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Confirm_Password_ToggleButtonItemStateChanged(evt);
            }
        });

        Vault_Location_Label.setFont(Vault_Location_Label.getFont().deriveFont(Vault_Location_Label.getFont().getSize()+2f));
        Vault_Location_Label.setText("Vault Location");

        Browse_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/folder.png"))); // NOI18N
        Browse_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Browse_ButtonActionPerformed(evt);
            }
        });

        Key_File_Label.setFont(Key_File_Label.getFont().deriveFont(Key_File_Label.getFont().getSize()+2f));
        Key_File_Label.setText("Key File");

        Key_File_CheckBox.setFont(Key_File_CheckBox.getFont().deriveFont(Key_File_CheckBox.getFont().getSize()+2f));
        Key_File_CheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Key_File_CheckBoxItemStateChanged(evt);
            }
        });

        Key_File_Location_Field.setEnabled(false);

        Key_File_Browse_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/folder.png"))); // NOI18N
        Key_File_Browse_Button.setEnabled(false);
        Key_File_Browse_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Key_File_Browse_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NewVault_ContainerLayout = new javax.swing.GroupLayout(NewVault_Container);
        NewVault_Container.setLayout(NewVault_ContainerLayout);
        NewVault_ContainerLayout.setHorizontalGroup(
            NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewVault_ContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Vault_Location_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Confirm_Password_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Vault_Password_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Vault_Name_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(NewVault_ContainerLayout.createSequentialGroup()
                        .addComponent(Key_File_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Key_File_CheckBox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Vault_Name_Field)
                    .addGroup(NewVault_ContainerLayout.createSequentialGroup()
                        .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Confirm_Password_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                            .addGroup(NewVault_ContainerLayout.createSequentialGroup()
                                .addComponent(Vault_Password_Field)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Vault_Password_ToggleButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Confirm_Password_ToggleButton)
                            .addComponent(Generate_Vault_Password_Button, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewVault_ContainerLayout.createSequentialGroup()
                        .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Vault_Location_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                            .addComponent(Key_File_Location_Field))
                        .addGap(6, 6, 6)
                        .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Browse_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Key_File_Browse_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        NewVault_ContainerLayout.setVerticalGroup(
            NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewVault_ContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Vault_Name_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(Vault_Name_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(NewVault_ContainerLayout.createSequentialGroup()
                        .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Vault_Password_ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Generate_Vault_Password_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Vault_Password_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1))
                    .addComponent(Vault_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Confirm_Password_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Confirm_Password_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(Confirm_Password_ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Vault_Location_Field)
                    .addComponent(Browse_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Vault_Location_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NewVault_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Key_File_CheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Key_File_Location_Field)
                    .addComponent(Key_File_Browse_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Key_File_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        NewVault_Cancel_Button.setFont(NewVault_Cancel_Button.getFont().deriveFont(NewVault_Cancel_Button.getFont().getSize()+2f));
        NewVault_Cancel_Button.setText("Cancel");
        NewVault_Cancel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewVault_Cancel_ButtonActionPerformed(evt);
            }
        });

        NewVault_Finish_Button.setFont(NewVault_Finish_Button.getFont().deriveFont(NewVault_Finish_Button.getFont().getSize()+2f));
        NewVault_Finish_Button.setText("Finish");
        NewVault_Finish_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewVault_Finish_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NewVaultPageLayout = new javax.swing.GroupLayout(NewVaultPage);
        NewVaultPage.setLayout(NewVaultPageLayout);
        NewVaultPageLayout.setHorizontalGroup(
            NewVaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewVaultPageLayout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addGroup(NewVaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(NewVaultPageLayout.createSequentialGroup()
                        .addComponent(NewVault_Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(560, 560, 560)
                        .addComponent(NewVault_Finish_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(NewVault_Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NewVault_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        NewVaultPageLayout.setVerticalGroup(
            NewVaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewVaultPageLayout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(NewVault_Label)
                .addGap(18, 18, 18)
                .addComponent(NewVault_Container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(NewVaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NewVault_Finish_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(NewVault_Cancel_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        Container.add(NewVaultPage, "new");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Root");
        FolderTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        FolderTree.setComponentPopupMenu(FolderTree_PopupMenu);
        FolderTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                FolderTreeMousePressed(evt);
            }
        });
        FolderTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                FolderTreeValueChanged(evt);
            }
        });
        FolderTree_ScrollPane.setViewportView(FolderTree);

        Passwords_Table.setAutoCreateRowSorter(true);
        Passwords_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title", "Username", "URL", "Notes"
            }
        ));
        Passwords_Table.setComponentPopupMenu(Passwords_Table_PopupMenu);
        Passwords_Table.setRowHeight(26);
        Passwords_Table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Passwords_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Passwords_TableMousePressed(evt);
            }
        });
        Passwords_Table.getSelectionModel().addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Passwords_Table_RowSelected(evt);
            }
        });
        Passwords_Table_ScrollPane.setViewportView(Passwords_Table);

        Details_Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        Details_Username_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Username"));

        Details_Username_Field.setEditable(false);

        javax.swing.GroupLayout Details_Username_PanelLayout = new javax.swing.GroupLayout(Details_Username_Panel);
        Details_Username_Panel.setLayout(Details_Username_PanelLayout);
        Details_Username_PanelLayout.setHorizontalGroup(
            Details_Username_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Details_Username_Field)
        );
        Details_Username_PanelLayout.setVerticalGroup(
            Details_Username_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Details_Username_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        Details_Password_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Password"));

        Details_Password_Field.setEditable(false);
        Details_Password_Field.putClientProperty("JPasswordField.cutCopyAllowed", true);

        Details_Password_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N
        Details_Password_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Details_Password_ToggleButtonItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout Details_Password_PanelLayout = new javax.swing.GroupLayout(Details_Password_Panel);
        Details_Password_Panel.setLayout(Details_Password_PanelLayout);
        Details_Password_PanelLayout.setHorizontalGroup(
            Details_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Details_Password_PanelLayout.createSequentialGroup()
                .addComponent(Details_Password_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Details_Password_ToggleButton))
        );
        Details_Password_PanelLayout.setVerticalGroup(
            Details_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Details_Password_PanelLayout.createSequentialGroup()
                .addGroup(Details_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Details_Password_Field)
                    .addComponent(Details_Password_ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Details_URL_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("URL"));

        Details_URL_Field.setEditable(false);

        javax.swing.GroupLayout Details_URL_PanelLayout = new javax.swing.GroupLayout(Details_URL_Panel);
        Details_URL_Panel.setLayout(Details_URL_PanelLayout);
        Details_URL_PanelLayout.setHorizontalGroup(
            Details_URL_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Details_URL_Field)
        );
        Details_URL_PanelLayout.setVerticalGroup(
            Details_URL_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Details_URL_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        Details_Notes_TextArea.setEditable(false);
        Details_Notes_TextArea.setColumns(20);
        Details_Notes_TextArea.setRows(5);
        Details_Notes_TextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Notes"));
        Details_Notes_ScrollPane.setViewportView(Details_Notes_TextArea);

        javax.swing.GroupLayout Details_PanelLayout = new javax.swing.GroupLayout(Details_Panel);
        Details_Panel.setLayout(Details_PanelLayout);
        Details_PanelLayout.setHorizontalGroup(
            Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Details_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Details_Username_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Details_Password_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Details_URL_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Details_Notes_ScrollPane)
                .addContainerGap())
        );
        Details_PanelLayout.setVerticalGroup(
            Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Details_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Details_Notes_ScrollPane)
                    .addGroup(Details_PanelLayout.createSequentialGroup()
                        .addComponent(Details_Username_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Details_Password_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Details_URL_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout VaultPageLayout = new javax.swing.GroupLayout(VaultPage);
        VaultPage.setLayout(VaultPageLayout);
        VaultPageLayout.setHorizontalGroup(
            VaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VaultPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FolderTree_ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Passwords_Table_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                    .addComponent(Details_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        VaultPageLayout.setVerticalGroup(
            VaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VaultPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VaultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FolderTree_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                    .addGroup(VaultPageLayout.createSequentialGroup()
                        .addComponent(Passwords_Table_ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Details_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        Container.add(VaultPage, "vault");

        EntryPage_Label.setFont(EntryPage_Label.getFont().deriveFont(EntryPage_Label.getFont().getSize()+12f));
        EntryPage_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        EntryPage_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/key.png"))); // NOI18N
        EntryPage_Label.setText("Entry Page");

        EntryPage_Container.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Title_Label.setFont(Title_Label.getFont().deriveFont(Title_Label.getFont().getSize()+2f));
        Title_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Title_Label.setText("Title");

        Username_Label.setFont(Username_Label.getFont().deriveFont(Username_Label.getFont().getSize()+2f));
        Username_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Username_Label.setText("Username");

        Password_Label.setFont(Password_Label.getFont().deriveFont(Password_Label.getFont().getSize()+2f));
        Password_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Password_Label.setText("Password");

        Password_Field_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N
        Password_Field_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Password_Field_ToggleButtonItemStateChanged(evt);
            }
        });

        Generate_Password_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dice-5.png"))); // NOI18N
        Generate_Password_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Generate_Password_ButtonActionPerformed(evt);
            }
        });

        URL_Label.setFont(URL_Label.getFont().deriveFont(URL_Label.getFont().getSize()+2f));
        URL_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        URL_Label.setText("URL");

        Notes_Label.setFont(Notes_Label.getFont().deriveFont(Notes_Label.getFont().getSize()+2f));
        Notes_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Notes_Label.setText("Notes");

        Notes_TextArea.setColumns(20);
        Notes_TextArea.setRows(5);
        Notes_ScrollPane.setViewportView(Notes_TextArea);

        javax.swing.GroupLayout EntryPage_ContainerLayout = new javax.swing.GroupLayout(EntryPage_Container);
        EntryPage_Container.setLayout(EntryPage_ContainerLayout);
        EntryPage_ContainerLayout.setHorizontalGroup(
            EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EntryPage_ContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Notes_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(URL_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Password_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Title_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Username_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EntryPage_ContainerLayout.createSequentialGroup()
                        .addComponent(Password_Field)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Password_Field_ToggleButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Generate_Password_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Title_TextField)
                    .addComponent(URL_TextField)
                    .addComponent(Username_TextField)
                    .addComponent(Notes_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE))
                .addContainerGap())
        );
        EntryPage_ContainerLayout.setVerticalGroup(
            EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EntryPage_ContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Title_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(Title_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Username_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Username_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Generate_Password_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Password_Field_ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Password_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Password_Field))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(URL_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(URL_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EntryPage_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Notes_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(Notes_ScrollPane))
                .addContainerGap())
        );

        EntryPage_Cancel_Button.setFont(EntryPage_Cancel_Button.getFont().deriveFont(EntryPage_Cancel_Button.getFont().getSize()+2f));
        EntryPage_Cancel_Button.setText("Cancel");
        EntryPage_Cancel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntryPage_Cancel_ButtonActionPerformed(evt);
            }
        });

        EntryPage_Finish_Button.setFont(EntryPage_Finish_Button.getFont().deriveFont(EntryPage_Finish_Button.getFont().getSize()+2f));
        EntryPage_Finish_Button.setText("Finish");
        EntryPage_Finish_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntryPage_Finish_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EntryPageLayout = new javax.swing.GroupLayout(EntryPage);
        EntryPage.setLayout(EntryPageLayout);
        EntryPageLayout.setHorizontalGroup(
            EntryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EntryPageLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(EntryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(EntryPageLayout.createSequentialGroup()
                        .addComponent(EntryPage_Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EntryPage_Finish_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EntryPage_Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EntryPage_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );
        EntryPageLayout.setVerticalGroup(
            EntryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EntryPageLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(EntryPage_Label)
                .addGap(18, 18, 18)
                .addComponent(EntryPage_Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(EntryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EntryPage_Cancel_Button)
                    .addComponent(EntryPage_Finish_Button))
                .addGap(50, 50, 50))
        );

        Container.add(EntryPage, "entry");

        Settings_Vault_Name_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Vault Name"));

        Settings_Vault_Name_Label.setFont(Settings_Vault_Name_Label.getFont().deriveFont(Settings_Vault_Name_Label.getFont().getSize()+2f));
        Settings_Vault_Name_Label.setText("Vault Name");

        Change_Vault_Name_Button.setText("Change Vault Name");
        Change_Vault_Name_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Vault_Name_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Settings_Vault_Name_PanelLayout = new javax.swing.GroupLayout(Settings_Vault_Name_Panel);
        Settings_Vault_Name_Panel.setLayout(Settings_Vault_Name_PanelLayout);
        Settings_Vault_Name_PanelLayout.setHorizontalGroup(
            Settings_Vault_Name_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Settings_Vault_Name_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Settings_Vault_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Settings_Vault_Name_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Settings_Vault_Name_Field)
                    .addGroup(Settings_Vault_Name_PanelLayout.createSequentialGroup()
                        .addComponent(Change_Vault_Name_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Settings_Vault_Name_PanelLayout.setVerticalGroup(
            Settings_Vault_Name_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Settings_Vault_Name_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Settings_Vault_Name_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Settings_Vault_Name_Field)
                    .addComponent(Settings_Vault_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Change_Vault_Name_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        Settings_Password_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Vault Password"));

        Settings_New_Password_Label.setFont(Settings_New_Password_Label.getFont().deriveFont(Settings_New_Password_Label.getFont().getSize()+2f));
        Settings_New_Password_Label.setText("New Password");

        Settings_New_Password_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N
        Settings_New_Password_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Settings_New_Password_ToggleButtonItemStateChanged(evt);
            }
        });

        Generate_New_Password_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dice-5.png"))); // NOI18N
        Generate_New_Password_Button.setToolTipText("");
        Generate_New_Password_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Generate_New_Password_ButtonActionPerformed(evt);
            }
        });

        Settings_Confirm_Password_Label.setFont(Settings_Confirm_Password_Label.getFont().deriveFont(Settings_Confirm_Password_Label.getFont().getSize()+2f));
        Settings_Confirm_Password_Label.setText("Confirm Password");

        Settings_Confirm_Password_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N
        Settings_Confirm_Password_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Settings_Confirm_Password_ToggleButtonItemStateChanged(evt);
            }
        });

        Change_Password_Button.setText("Change Password");
        Change_Password_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Password_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Settings_Password_PanelLayout = new javax.swing.GroupLayout(Settings_Password_Panel);
        Settings_Password_Panel.setLayout(Settings_Password_PanelLayout);
        Settings_Password_PanelLayout.setHorizontalGroup(
            Settings_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Settings_Password_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Settings_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Settings_Password_PanelLayout.createSequentialGroup()
                        .addComponent(Settings_Confirm_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Settings_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Change_Password_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Settings_Confirm_Password_Field)))
                    .addGroup(Settings_Password_PanelLayout.createSequentialGroup()
                        .addComponent(Settings_New_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Settings_New_Password_Field)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Settings_New_Password_ToggleButton)))
                .addGap(6, 6, 6)
                .addGroup(Settings_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Generate_New_Password_Button, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Settings_Confirm_Password_ToggleButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        Settings_Password_PanelLayout.setVerticalGroup(
            Settings_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Settings_Password_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Settings_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Settings_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Settings_New_Password_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addComponent(Settings_New_Password_Field))
                    .addComponent(Generate_New_Password_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Settings_New_Password_ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Settings_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Settings_Password_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Settings_Confirm_Password_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Settings_Confirm_Password_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Settings_Confirm_Password_ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Change_Password_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        Settings_Key_File_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Key File"));

        Current_Key_File_Label.setFont(Current_Key_File_Label.getFont().deriveFont(Current_Key_File_Label.getFont().getSize()+2f));
        Current_Key_File_Label.setText("Current Key File");

        Current_Key_File_Location_Field.setEditable(false);

        Current_Password_Label.setFont(Current_Password_Label.getFont().deriveFont(Current_Password_Label.getFont().getSize()+2f));
        Current_Password_Label.setText("Current Password");

        Current_Password_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N
        Current_Password_ToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Current_Password_ToggleButtonItemStateChanged(evt);
            }
        });

        New_Key_File_Label.setFont(New_Key_File_Label.getFont().deriveFont(New_Key_File_Label.getFont().getSize()+2f));
        New_Key_File_Label.setText("New Key File");

        New_Key_File_Browse_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/folder.png"))); // NOI18N
        New_Key_File_Browse_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_Key_File_Browse_ButtonActionPerformed(evt);
            }
        });

        Key_File_ButtonGroup.add(New_Key_RadioButton);
        New_Key_RadioButton.setText("Generate New Key");

        Key_File_ButtonGroup.add(Existing_Key_RadioButton);
        Existing_Key_RadioButton.setText("Use Existing Key");

        Key_File_ButtonGroup.add(Remove_Key_RadioButton);
        Remove_Key_RadioButton.setText("Remove Key File");
        Remove_Key_RadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Remove_Key_RadioButtonItemStateChanged(evt);
            }
        });

        Change_Key_Button.setText("Change Key File");
        Change_Key_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Key_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Settings_Key_File_PanelLayout = new javax.swing.GroupLayout(Settings_Key_File_Panel);
        Settings_Key_File_Panel.setLayout(Settings_Key_File_PanelLayout);
        Settings_Key_File_PanelLayout.setHorizontalGroup(
            Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Settings_Key_File_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Settings_Key_File_PanelLayout.createSequentialGroup()
                        .addComponent(Current_Key_File_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Current_Key_File_Location_Field))
                    .addGroup(Settings_Key_File_PanelLayout.createSequentialGroup()
                        .addComponent(New_Key_File_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Settings_Key_File_PanelLayout.createSequentialGroup()
                                .addComponent(New_Key_File_Location_Field)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(New_Key_File_Browse_Button))
                            .addGroup(Settings_Key_File_PanelLayout.createSequentialGroup()
                                .addGroup(Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Settings_Key_File_PanelLayout.createSequentialGroup()
                                        .addComponent(New_Key_RadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Existing_Key_RadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Remove_Key_RadioButton))
                                    .addComponent(Change_Key_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 480, Short.MAX_VALUE))))
                    .addGroup(Settings_Key_File_PanelLayout.createSequentialGroup()
                        .addComponent(Current_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Current_Password_Field)
                        .addGap(6, 6, 6)
                        .addComponent(Current_Password_ToggleButton)))
                .addContainerGap())
        );
        Settings_Key_File_PanelLayout.setVerticalGroup(
            Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Settings_Key_File_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Current_Key_File_Location_Field)
                    .addComponent(Current_Key_File_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Current_Password_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Current_Password_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Current_Password_ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(New_Key_File_Location_Field)
                        .addComponent(New_Key_File_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(New_Key_File_Browse_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Settings_Key_File_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(New_Key_RadioButton)
                    .addComponent(Existing_Key_RadioButton)
                    .addComponent(Remove_Key_RadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Change_Key_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SettingsPageLayout = new javax.swing.GroupLayout(SettingsPage);
        SettingsPage.setLayout(SettingsPageLayout);
        SettingsPageLayout.setHorizontalGroup(
            SettingsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SettingsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Settings_Vault_Name_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Settings_Password_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Settings_Key_File_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        SettingsPageLayout.setVerticalGroup(
            SettingsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Settings_Vault_Name_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Settings_Password_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Settings_Key_File_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Container.add(SettingsPage, "settings");

        Vault_Menu.setText("Vault");

        New_Vault_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        New_Vault_MenuItem.setText("New Vault");
        New_Vault_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_Vault_MenuItemActionPerformed(evt);
            }
        });
        Vault_Menu.add(New_Vault_MenuItem);

        Open_Vault_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Open_Vault_MenuItem.setText("Open Vault");
        Open_Vault_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Open_Vault_MenuItemActionPerformed(evt);
            }
        });
        Vault_Menu.add(Open_Vault_MenuItem);

        Close_Vault_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Close_Vault_MenuItem.setText("Close Vault");
        Close_Vault_MenuItem.setEnabled(false);
        Close_Vault_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Close_Vault_MenuItemActionPerformed(evt);
            }
        });
        Vault_Menu.add(Close_Vault_MenuItem);
        Vault_Menu.add(Vault_Menu_Separator_One);

        Exit_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Exit_MenuItem.setText("Exit");
        Exit_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit_MenuItemActionPerformed(evt);
            }
        });
        Vault_Menu.add(Exit_MenuItem);

        Menu_Bar.add(Vault_Menu);

        Edit_Menu.setText("Edit");

        New_Entry_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        New_Entry_MenuItem.setText("New Entry");
        New_Entry_MenuItem.setEnabled(false);
        New_Entry_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_Entry_MenuItemActionPerformed(evt);
            }
        });
        Edit_Menu.add(New_Entry_MenuItem);

        Edit_Entry_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Edit_Entry_MenuItem.setText("Edit Entry");
        Edit_Entry_MenuItem.setEnabled(false);
        Edit_Entry_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_Entry_MenuItemActionPerformed(evt);
            }
        });
        Edit_Menu.add(Edit_Entry_MenuItem);

        Delete_Entry_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete_Entry_MenuItem.setText("Delete Entry");
        Delete_Entry_MenuItem.setEnabled(false);
        Delete_Entry_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Entry_MenuItemActionPerformed(evt);
            }
        });
        Edit_Menu.add(Delete_Entry_MenuItem);
        Edit_Menu.add(Edit_Menu_Separator_One);

        New_Group_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        New_Group_MenuItem.setText("New Group");
        New_Group_MenuItem.setEnabled(false);
        New_Group_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_Group_MenuItemActionPerformed(evt);
            }
        });
        Edit_Menu.add(New_Group_MenuItem);

        Edit_Group_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Edit_Group_MenuItem.setText("Edit Group");
        Edit_Group_MenuItem.setEnabled(false);
        Edit_Group_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_Group_MenuItemActionPerformed(evt);
            }
        });
        Edit_Menu.add(Edit_Group_MenuItem);

        Delete_Group_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.ALT_DOWN_MASK));
        Delete_Group_MenuItem.setText("Delete Group");
        Delete_Group_MenuItem.setEnabled(false);
        Delete_Group_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Group_MenuItemActionPerformed(evt);
            }
        });
        Edit_Menu.add(Delete_Group_MenuItem);
        Edit_Menu.add(Edit_Menu_Separator_Two);

        Copy_Username_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Copy_Username_MenuItem.setText("Copy Username");
        Copy_Username_MenuItem.setEnabled(false);
        Copy_Username_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy_Username_MenuItemActionPerformed(evt);
            }
        });
        Edit_Menu.add(Copy_Username_MenuItem);

        Copy_Password_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Copy_Password_MenuItem.setText("Copy Password");
        Copy_Password_MenuItem.setEnabled(false);
        Copy_Password_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy_Password_MenuItemActionPerformed(evt);
            }
        });
        Edit_Menu.add(Copy_Password_MenuItem);

        Copy_URL_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Copy_URL_MenuItem.setText("Copy URL");
        Copy_URL_MenuItem.setEnabled(false);
        Copy_URL_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Copy_URL_MenuItemActionPerformed(evt);
            }
        });
        Edit_Menu.add(Copy_URL_MenuItem);

        Menu_Bar.add(Edit_Menu);

        Tools_Menu.setText("Tools");

        Password_Generator_MenuItem.setText("Password Generator");
        Password_Generator_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Password_Generator_MenuItemActionPerformed(evt);
            }
        });
        Tools_Menu.add(Password_Generator_MenuItem);

        Settings_CheckBox_MenuItem.setText("Settings");
        Settings_CheckBox_MenuItem.setEnabled(false);
        Settings_CheckBox_MenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Settings_CheckBox_MenuItemItemStateChanged(evt);
            }
        });
        Tools_Menu.add(Settings_CheckBox_MenuItem);

        Menu_Bar.add(Tools_Menu);

        Help_Menu.setText("Help");

        About_MenuItem.setText("About");
        About_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                About_MenuItemActionPerformed(evt);
            }
        });
        Help_Menu.add(About_MenuItem);

        Menu_Bar.add(Help_Menu);

        setJMenuBar(Menu_Bar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Main_ToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Main_ToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void New_Vault_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_Vault_MenuItemActionPerformed
        Container_Deck.show(Container, "new");
    }//GEN-LAST:event_New_Vault_MenuItemActionPerformed

    private void Open_Vault_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Open_Vault_MenuItemActionPerformed
        Open_Vault_ActionPerformed();
    }//GEN-LAST:event_Open_Vault_MenuItemActionPerformed

    private void Close_Vault_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Close_Vault_MenuItemActionPerformed
        com.sentinel.internal.SQLite.closeVault();
        CloseVaultPage();
    }//GEN-LAST:event_Close_Vault_MenuItemActionPerformed

    private void Exit_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit_MenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_Exit_MenuItemActionPerformed

    private void New_Entry_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_Entry_MenuItemActionPerformed
        New_Entry_ActionPerformed();
    }//GEN-LAST:event_New_Entry_MenuItemActionPerformed

    private void Edit_Entry_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_Entry_MenuItemActionPerformed
        Edit_Entry_ActionPerformed();
    }//GEN-LAST:event_Edit_Entry_MenuItemActionPerformed

    private void Delete_Entry_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Entry_MenuItemActionPerformed
        Delete_Entry_ActionPerformed();
    }//GEN-LAST:event_Delete_Entry_MenuItemActionPerformed

    private void New_Group_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_Group_MenuItemActionPerformed
        New_Group_ActionPerformed();
    }//GEN-LAST:event_New_Group_MenuItemActionPerformed

    private void Edit_Group_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_Group_MenuItemActionPerformed
        Edit_Group_ActionPerformed();
    }//GEN-LAST:event_Edit_Group_MenuItemActionPerformed

    private void Delete_Group_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Group_MenuItemActionPerformed
        Delete_Group_ActionPerformed();
    }//GEN-LAST:event_Delete_Group_MenuItemActionPerformed

    private void Copy_Username_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy_Username_MenuItemActionPerformed
        Copy_Username_ActionPerformed();
    }//GEN-LAST:event_Copy_Username_MenuItemActionPerformed

    private void Copy_Password_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy_Password_MenuItemActionPerformed
        Copy_Password_ActionPerformed();
    }//GEN-LAST:event_Copy_Password_MenuItemActionPerformed

    private void Copy_URL_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy_URL_MenuItemActionPerformed
        Copy_URL_ActionPerformed();
    }//GEN-LAST:event_Copy_URL_MenuItemActionPerformed

    private void Password_Generator_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Password_Generator_MenuItemActionPerformed
        Password PG = new Password();
        PG.setVisible(true);
    }//GEN-LAST:event_Password_Generator_MenuItemActionPerformed

    private void Settings_CheckBox_MenuItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Settings_CheckBox_MenuItemItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            Settings_ToggleButton.setSelected(true);
        else
            Settings_ToggleButton.setSelected(false);
    }//GEN-LAST:event_Settings_CheckBox_MenuItemItemStateChanged

    private void About_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_About_MenuItemActionPerformed
        JOptionPane.showMessageDialog(null,
            "<html><h1>Sentinel Password Manager</h1></html>Version " + Version + "\nAuthor: Hemant Kumar Morya",
            "About Sentinel", JOptionPane.PLAIN_MESSAGE,
            new javax.swing.ImageIcon(getClass().getResource("/images/app-icon.png"))
        );
    }//GEN-LAST:event_About_MenuItemActionPerformed

    private void Open_Vault_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Open_Vault_ButtonActionPerformed
        Open_Vault_ActionPerformed();
    }//GEN-LAST:event_Open_Vault_ButtonActionPerformed

    private void Close_Vault_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Close_Vault_ButtonActionPerformed
        com.sentinel.internal.SQLite.closeVault();
        CloseVaultPage();
    }//GEN-LAST:event_Close_Vault_ButtonActionPerformed

    private void New_Entry_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_Entry_ButtonActionPerformed
        New_Entry_ActionPerformed();
    }//GEN-LAST:event_New_Entry_ButtonActionPerformed

    private void Edit_Entry_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_Entry_ButtonActionPerformed
        Edit_Entry_ActionPerformed();
    }//GEN-LAST:event_Edit_Entry_ButtonActionPerformed

    private void Delete_Entry_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Entry_ButtonActionPerformed
        Delete_Entry_ActionPerformed();
    }//GEN-LAST:event_Delete_Entry_ButtonActionPerformed

    private void Copy_Username_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy_Username_ButtonActionPerformed
        Copy_Username_ActionPerformed();
    }//GEN-LAST:event_Copy_Username_ButtonActionPerformed

    private void Copy_Password_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy_Password_ButtonActionPerformed
        Copy_Password_ActionPerformed();
    }//GEN-LAST:event_Copy_Password_ButtonActionPerformed

    private void Copy_URL_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Copy_URL_ButtonActionPerformed
        Copy_URL_ActionPerformed();
    }//GEN-LAST:event_Copy_URL_ButtonActionPerformed

    private void Password_Generator_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Password_Generator_ButtonActionPerformed
        Password PG = new Password();
        PG.setVisible(true);
    }//GEN-LAST:event_Password_Generator_ButtonActionPerformed

    private void Settings_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Settings_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            Settings_CheckBox_MenuItem.setSelected(true);
            Settings_Vault_Name_Field.setText(Current_Vault_Name);
            New_Key_RadioButton.setSelected(true);
            if (Current_Vault_Has_Key) {
                Current_Key_File_Location_Field.setText(Current_Vault_Key_Location);
                Current_Key_File_Location_Field.setEnabled(true);
                Change_Key_Button.setText("Change Key File");
                Remove_Key_RadioButton.setEnabled(true);
            } else {
                Current_Key_File_Location_Field.setText("This Vault does not have a Key File.");
                Current_Key_File_Location_Field.setEnabled(false);
                Change_Key_Button.setText("Add Key File");
                Remove_Key_RadioButton.setEnabled(false);
            }
            Container_Deck.show(Container, "settings");
            DisableVaultDataManipulationFunctions();
            Close_Vault_Button.setEnabled(false);
            Copy_Username_Button.setEnabled(false);
            Copy_Password_Button.setEnabled(false);
            Copy_URL_Button.setEnabled(false);
            Close_Vault_MenuItem.setEnabled(false);
            Copy_Username_MenuItem.setEnabled(false);
            Copy_Password_MenuItem.setEnabled(false);
            Copy_URL_MenuItem.setEnabled(false);
        } else {
            Settings_CheckBox_MenuItem.setSelected(false);
            Container_Deck.show(Container, "vault");
            EnableVaultDataManipulationFunctions();
            Close_Vault_Button.setEnabled(true);
            Copy_Username_Button.setEnabled(true);
            Copy_Password_Button.setEnabled(true);
            Copy_URL_Button.setEnabled(true);
            Close_Vault_MenuItem.setEnabled(true);
            Copy_Username_MenuItem.setEnabled(true);
            Copy_Password_MenuItem.setEnabled(true);
            Copy_URL_MenuItem.setEnabled(true);
            Settings_New_Password_Field.setText("");
            Settings_Confirm_Password_Field.setText("");
            Current_Password_Field.setText("");
            New_Key_File_Location_Field.setText("");
        }
    }//GEN-LAST:event_Settings_ToggleButtonItemStateChanged

    private void About_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_About_ButtonActionPerformed
        JOptionPane.showMessageDialog(null,
            "<html><h1>Sentinel Password Manager</h1></html>Version " + Version + "\nAuthor: Hemant Kumar Morya",
            "About Sentinel", JOptionPane.PLAIN_MESSAGE,
            new javax.swing.ImageIcon(getClass().getResource("/images/app-icon.png"))
        );
    }//GEN-LAST:event_About_ButtonActionPerformed

    private void StartPage_Create_Vault_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartPage_Create_Vault_ButtonActionPerformed
        Container_Deck.show(Container, "new");
    }//GEN-LAST:event_StartPage_Create_Vault_ButtonActionPerformed

    private void StartPage_Open_Vault_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartPage_Open_Vault_ButtonActionPerformed
        Open_Vault_ActionPerformed();
    }//GEN-LAST:event_StartPage_Open_Vault_ButtonActionPerformed

    private void Recent_Vaults_ListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Recent_Vaults_ListMouseClicked
        javax.swing.JList list = (javax.swing.JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            String vltPath = list.getSelectedValue().toString();
            if (!new java.io.File(vltPath).exists())
                JOptionPane.showMessageDialog(null, "The selected Vault File is not present at the specified path. It may have been moved or renamed.", "Missing Vault File", JOptionPane.ERROR_MESSAGE);
            else {
                Open_Vault_ActionPerformed(vltPath);
            }
        }
    }//GEN-LAST:event_Recent_Vaults_ListMouseClicked

    private void Clear_List_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_List_ButtonActionPerformed
        com.sentinel.internal.SQLite.remVaultList();
        Recent_Vaults_List.setModel(com.sentinel.internal.SQLite.getVaultList());
    }//GEN-LAST:event_Clear_List_ButtonActionPerformed

    private void OpenVault_Password_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OpenVault_Password_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            OpenVault_Password_Field.setEchoChar((char) 0);
        else
            OpenVault_Password_Field.setEchoChar('\u2022');
    }//GEN-LAST:event_OpenVault_Password_ToggleButtonItemStateChanged

    private void OpenVault_Key_File_CheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OpenVault_Key_File_CheckBoxItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            OpenVault_Key_File_Location_Field.setEnabled(true);
            OpenVault_Key_File_ToggleButton.setEnabled(true);
            OpenVault_Key_File_Browse_Button.setEnabled(true);
        } else {
            OpenVault_Key_File_Location_Field.setEnabled(false);
            OpenVault_Key_File_ToggleButton.setEnabled(false);
            OpenVault_Key_File_Browse_Button.setEnabled(false);
        }
    }//GEN-LAST:event_OpenVault_Key_File_CheckBoxItemStateChanged

    private void OpenVault_Key_File_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OpenVault_Key_File_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            OpenVault_Key_File_Location_Field.setEchoChar((char) 0);
        else
            OpenVault_Key_File_Location_Field.setEchoChar('\u2022');
    }//GEN-LAST:event_OpenVault_Key_File_ToggleButtonItemStateChanged

    private void OpenVault_Key_File_Browse_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenVault_Key_File_Browse_ButtonActionPerformed
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setDialogTitle("Select Key File");
        fileChooser.setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Sentinel Vault Key File", "svlk"));
        if (fileChooser.showOpenDialog(null) == javax.swing.JFileChooser.APPROVE_OPTION) {
            OpenVault_Key_File_Location_Field.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_OpenVault_Key_File_Browse_ButtonActionPerformed

    private void Close_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Close_ButtonActionPerformed
        Container_Deck.show(Container, "start");
    }//GEN-LAST:event_Close_ButtonActionPerformed

    private void Unlock_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Unlock_ButtonActionPerformed
        String vltPath = Vault_Path_Field.getText();
        String vltPass = new String(OpenVault_Password_Field.getPassword());
        String valtKey = new String(OpenVault_Key_File_Location_Field.getPassword());
        boolean vltKey = OpenVault_Key_File_CheckBox.isSelected();
        if (vltPath.equals("") || vltPass.equals("") || (vltKey && valtKey.equals("")))
            JOptionPane.showMessageDialog(null, "All Fields are Required to be Filled. Please Try Again!", "Empty Feilds", JOptionPane.ERROR_MESSAGE);
        else if (!new java.io.File(vltPath).exists())
            JOptionPane.showMessageDialog(null, "The Vault File is not present at the specified path. Please Try Again!", "Missing Vault File", JOptionPane.ERROR_MESSAGE);
        else if (vltKey && !new java.io.File(valtKey).exists())
            JOptionPane.showMessageDialog(null, "The Key File is not present at the specified path. Please Try Again!", "Missing Key File", JOptionPane.ERROR_MESSAGE);
        else {
            if (vltKey) {
                String Salt = com.sentinel.internal.Functions.readKeyFile(valtKey);
                com.password4j.Hash hash = com.password4j.Password.hash(vltPass).addSalt(Salt).withPBKDF2();
                vltPass = hash.getResult();
            }
            if (com.sentinel.internal.SQLite.openVault(vltPath, vltPass)) {
                String vltName = com.sentinel.internal.SQLite.getVaultName();
                com.sentinel.internal.SQLite.setVaultList(vltPath, vltName, vltKey, valtKey);
                Current_Vault_Location = vltPath;
                Current_Vault_Name = vltName;
                Current_Vault_Has_Key = vltKey;
                Current_Vault_Key_Location = valtKey;
                Vault_Path_Field.setText("");
                OpenVault_Password_Field.setText("");
                OpenVault_Key_File_Location_Field.setText("");
                OpenVault_Key_File_CheckBox.setSelected(false);
                OpenVaultPage();
            }
        }
    }//GEN-LAST:event_Unlock_ButtonActionPerformed

    private void Vault_Password_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Vault_Password_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            Vault_Password_Field.setEchoChar((char) 0);
        else
            Vault_Password_Field.setEchoChar('\u2022');
    }//GEN-LAST:event_Vault_Password_ToggleButtonItemStateChanged

    private void Generate_Vault_Password_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Generate_Vault_Password_ButtonActionPerformed
        Password PG = new Password();
        PG.setVisible(true);
    }//GEN-LAST:event_Generate_Vault_Password_ButtonActionPerformed

    private void Confirm_Password_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Confirm_Password_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            Confirm_Password_Field.setEchoChar((char) 0);
        else
            Confirm_Password_Field.setEchoChar('\u2022');
    }//GEN-LAST:event_Confirm_Password_ToggleButtonItemStateChanged

    private void Browse_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Browse_ButtonActionPerformed
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setDialogTitle("Save Vault as");
        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        fileChooser.setSelectedFile(new java.io.File("Passwords.svlt"));
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Sentinel Vault File", "svlt"));
        if (fileChooser.showSaveDialog(null) == javax.swing.JFileChooser.APPROVE_OPTION) {
            if (fileChooser.getSelectedFile().exists()) {
                int response = JOptionPane.showConfirmDialog(null, "The file already exists. Do you want to overwrite the file?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (response == JOptionPane.YES_OPTION) {
                    Vault_Location_Field.setText(fileChooser.getSelectedFile().getAbsolutePath());
                }
            } else
                Vault_Location_Field.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_Browse_ButtonActionPerformed

    private void Key_File_CheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Key_File_CheckBoxItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            Key_File_Location_Field.setEnabled(true);
            Key_File_Browse_Button.setEnabled(true);
        } else {
            Key_File_Location_Field.setEnabled(false);
            Key_File_Browse_Button.setEnabled(false);
        }
    }//GEN-LAST:event_Key_File_CheckBoxItemStateChanged

    private void Key_File_Browse_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Key_File_Browse_ButtonActionPerformed
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setDialogTitle("Save Key File as");
        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        fileChooser.setSelectedFile(new java.io.File("Passwords.svlk"));
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Sentinel Vault Key File", "svlk"));
        if (fileChooser.showSaveDialog(null) == javax.swing.JFileChooser.APPROVE_OPTION) {
            if (fileChooser.getSelectedFile().exists()) {
                int response = JOptionPane.showConfirmDialog(null, "The file already exists. Do you want to overwrite the file?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (response == JOptionPane.YES_OPTION) {
                    Key_File_Location_Field.setText(fileChooser.getSelectedFile().getAbsolutePath());
                }
            } else
                Key_File_Location_Field.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_Key_File_Browse_ButtonActionPerformed

    private void NewVault_Cancel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewVault_Cancel_ButtonActionPerformed
        Container_Deck.show(Container, "start");
    }//GEN-LAST:event_NewVault_Cancel_ButtonActionPerformed

    private void NewVault_Finish_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewVault_Finish_ButtonActionPerformed
        String vltName = Vault_Name_Field.getText();
        String vltPass = new String(Vault_Password_Field.getPassword());
        String cnfPass = new String(Confirm_Password_Field.getPassword());
        String vltPath = Vault_Location_Field.getText();
        String valtKey = Key_File_Location_Field.getText();
        boolean vltKey = Key_File_CheckBox.isSelected();
        if (vltName.equals("") || vltPass.equals("") || cnfPass.equals("") || vltPath.equals("") || (vltKey && valtKey.equals("")))
            JOptionPane.showMessageDialog(null, "All Fields are Required to be Filled. Please Try Again!", "Empty Feilds", JOptionPane.ERROR_MESSAGE);
        else if (vltPass.length() < 8)
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least 8 Characters. Please Try Again!", "Password Too Short", JOptionPane.ERROR_MESSAGE);
        else if (!vltPass.equals(cnfPass))
            JOptionPane.showMessageDialog(null, "The Passwords in Password Fields do not Match. Please Try Again!", "Password Mismatch", JOptionPane.ERROR_MESSAGE);
        else {
            if (vltKey) {
                String Salt = com.sentinel.internal.Functions.getSalt();
                com.password4j.Hash hash = com.password4j.Password.hash(vltPass).addSalt(Salt).withPBKDF2();
                com.sentinel.internal.Functions.writeKeyFile(Salt, valtKey);
                vltPass = hash.getResult();
            }
            if (com.sentinel.internal.SQLite.createNewVault(vltName, vltPass, vltPath)) {
                com.sentinel.internal.SQLite.setVaultList(vltPath, vltName, vltKey, valtKey);
                Current_Vault_Location = vltPath;
                Current_Vault_Name = vltName;
                Current_Vault_Has_Key = vltKey;
                Current_Vault_Key_Location = valtKey;
                Vault_Name_Field.setText("");
                Vault_Password_Field.setText("");
                Confirm_Password_Field.setText("");
                Vault_Location_Field.setText("");
                Key_File_Location_Field.setText("");
                Key_File_CheckBox.setSelected(false);
                OpenVaultPage();
            }
        }
    }//GEN-LAST:event_NewVault_Finish_ButtonActionPerformed

    private void FolderTreeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FolderTreeMousePressed
        javax.swing.tree.TreePath selPath = FolderTree.getClosestPathForLocation(evt.getX(), evt.getY());
        FolderTree.setSelectionPath(selPath);
    }//GEN-LAST:event_FolderTreeMousePressed

    private void FolderTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_FolderTreeValueChanged
        if (evt.getNewLeadSelectionPath() != null) {
            String vltTableName = evt.getNewLeadSelectionPath().getLastPathComponent().toString();
            Passwords_Table_Model(vltTableName);
            Vault_Table_Name = vltTableName;
        }
    }//GEN-LAST:event_FolderTreeValueChanged

    private void Tree_PopupMenu_New_GroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tree_PopupMenu_New_GroupActionPerformed
        New_Group_ActionPerformed();
    }//GEN-LAST:event_Tree_PopupMenu_New_GroupActionPerformed

    private void Tree_PopupMenu_Edit_GroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tree_PopupMenu_Edit_GroupActionPerformed
        Edit_Group_ActionPerformed();
    }//GEN-LAST:event_Tree_PopupMenu_Edit_GroupActionPerformed

    private void Tree_PopupMenu_Delete_GroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tree_PopupMenu_Delete_GroupActionPerformed
        Delete_Group_ActionPerformed();
    }//GEN-LAST:event_Tree_PopupMenu_Delete_GroupActionPerformed

    private void Passwords_TableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Passwords_TableMousePressed
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3) {
            int row = Passwords_Table.rowAtPoint(evt.getPoint());
            int column = Passwords_Table.columnAtPoint(evt.getPoint());
            if (!Passwords_Table.isRowSelected(row))
                Passwords_Table.changeSelection(row, column, false, false);
        }
    }//GEN-LAST:event_Passwords_TableMousePressed

    private void Passwords_Table_RowSelected(javax.swing.event.ListSelectionEvent evt) {
        int row = Passwords_Table.getSelectedRow();
        if (row != -1) {
            Details_Username_Field.setText(Passwords_Table.getValueAt(row, 2).toString());
            Details_Password_Field.setText(Passwords_Table.getValueAt(row, 3).toString());
            Details_URL_Field.setText(Passwords_Table.getValueAt(row, 4).toString());
            Details_Notes_TextArea.setText(Passwords_Table.getValueAt(row, 5).toString());
        }
    }

    private void Table_PopupMenu_New_EntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table_PopupMenu_New_EntryActionPerformed
        New_Entry_ActionPerformed();
    }//GEN-LAST:event_Table_PopupMenu_New_EntryActionPerformed

    private void Table_PopupMenu_Edit_EntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table_PopupMenu_Edit_EntryActionPerformed
        Edit_Entry_ActionPerformed();
    }//GEN-LAST:event_Table_PopupMenu_Edit_EntryActionPerformed

    private void Table_PopupMenu_Delete_EntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table_PopupMenu_Delete_EntryActionPerformed
        Delete_Entry_ActionPerformed();
    }//GEN-LAST:event_Table_PopupMenu_Delete_EntryActionPerformed

    private void Table_PopupMenu_Copy_UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table_PopupMenu_Copy_UsernameActionPerformed
        Copy_Username_ActionPerformed();
    }//GEN-LAST:event_Table_PopupMenu_Copy_UsernameActionPerformed

    private void Table_PopupMenu_Copy_PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table_PopupMenu_Copy_PasswordActionPerformed
        Copy_Password_ActionPerformed();
    }//GEN-LAST:event_Table_PopupMenu_Copy_PasswordActionPerformed

    private void Table_PopupMenu_Copy_URLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table_PopupMenu_Copy_URLActionPerformed
        Copy_URL_ActionPerformed();
    }//GEN-LAST:event_Table_PopupMenu_Copy_URLActionPerformed

    private void Details_Password_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Details_Password_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            Details_Password_Field.setEchoChar((char) 0);
        else
            Details_Password_Field.setEchoChar('\u2022');
    }//GEN-LAST:event_Details_Password_ToggleButtonItemStateChanged

    private void Password_Field_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Password_Field_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            Password_Field.setEchoChar((char) 0);
        else
            Password_Field.setEchoChar('\u2022');
    }//GEN-LAST:event_Password_Field_ToggleButtonItemStateChanged

    private void Generate_Password_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Generate_Password_ButtonActionPerformed
        Password PG = new Password();
        PG.setVisible(true);
    }//GEN-LAST:event_Generate_Password_ButtonActionPerformed

    private void EntryPage_Cancel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntryPage_Cancel_ButtonActionPerformed
        Container_Deck.show(Container, "vault");
        EnableVaultDataManipulationFunctions();
        Title_TextField.setText("");
        Username_TextField.setText("");
        Password_Field.setText("");
        URL_TextField.setText("");
        Notes_TextArea.setText("");
    }//GEN-LAST:event_EntryPage_Cancel_ButtonActionPerformed

    private void EntryPage_Finish_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntryPage_Finish_ButtonActionPerformed
        String Title = Title_TextField.getText();
        String Username = Username_TextField.getText();
        String Password = new String(Password_Field.getPassword());
        String URL = URL_TextField.getText();
        String Notes = Notes_TextArea.getText();
        com.sentinel.internal.SQLite.newTableEntry(Vault_Table_Name, UID, Title, Username, Password, URL, Notes);
        Passwords_Table_Model(Vault_Table_Name);
        Container_Deck.show(Container, "vault");
        EnableVaultDataManipulationFunctions();
        Title_TextField.setText("");
        Username_TextField.setText("");
        Password_Field.setText("");
        URL_TextField.setText("");
        Notes_TextArea.setText("");
    }//GEN-LAST:event_EntryPage_Finish_ButtonActionPerformed

    private void Change_Vault_Name_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Vault_Name_ButtonActionPerformed
        String vltName = Settings_Vault_Name_Field.getText();
        if (vltName.equals(""))
            JOptionPane.showMessageDialog(null, "Vault Name Field is Required to be Filled. Please Try Again!", "Empty Feilds", JOptionPane.ERROR_MESSAGE);
        else if (vltName.equals(Current_Vault_Name))
            JOptionPane.showMessageDialog(null, "New Name is same as the Old one. Nothing to Rename.", "Error", JOptionPane.ERROR_MESSAGE);
        else {
            com.sentinel.internal.SQLite.setVaultName(vltName);
            com.sentinel.internal.SQLite.setVaultList(Current_Vault_Location, vltName, Current_Vault_Has_Key, Current_Vault_Key_Location);
            Current_Vault_Name = com.sentinel.internal.SQLite.getVaultName();
            JOptionPane.showMessageDialog(null, "Vault Name Changed Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            Settings_Vault_Name_Field.setText(Current_Vault_Name);
            setTitle("Vault : " + Current_Vault_Name + "  \u2013  Sentinel");
        }
    }//GEN-LAST:event_Change_Vault_Name_ButtonActionPerformed

    private void Settings_New_Password_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Settings_New_Password_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            Settings_New_Password_Field.setEchoChar((char) 0);
        else
            Settings_New_Password_Field.setEchoChar('\u2022');
    }//GEN-LAST:event_Settings_New_Password_ToggleButtonItemStateChanged

    private void Generate_New_Password_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Generate_New_Password_ButtonActionPerformed
        Password PG = new Password();
        PG.setVisible(true);
    }//GEN-LAST:event_Generate_New_Password_ButtonActionPerformed

    private void Settings_Confirm_Password_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Settings_Confirm_Password_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            Settings_Confirm_Password_Field.setEchoChar((char) 0);
        else
            Settings_Confirm_Password_Field.setEchoChar('\u2022');
    }//GEN-LAST:event_Settings_Confirm_Password_ToggleButtonItemStateChanged

    private void Change_Password_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Password_ButtonActionPerformed
        String vltPass = new String(Settings_New_Password_Field.getPassword());
        String cnfPass = new String(Settings_Confirm_Password_Field.getPassword());
        if (vltPass.equals("") || cnfPass.equals(""))
            JOptionPane.showMessageDialog(null, "All Fields are Required to be Filled. Please Try Again!", "Empty Feilds", JOptionPane.ERROR_MESSAGE);
        else if (vltPass.length() < 8)
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least 8 Characters. Please Try Again!", "Password Too Short", JOptionPane.ERROR_MESSAGE);
        else if (!vltPass.equals(cnfPass))
            JOptionPane.showMessageDialog(null, "The Passwords in Password Fields do not Match. Please Try Again!", "Password Mismatch", JOptionPane.ERROR_MESSAGE);
        else {
            if (Current_Vault_Has_Key) {
                String Salt = com.sentinel.internal.Functions.readKeyFile(Current_Vault_Key_Location);
                com.password4j.Hash hash = com.password4j.Password.hash(vltPass).addSalt(Salt).withPBKDF2();
                vltPass = hash.getResult();
            }
            com.sentinel.internal.SQLite.vltPassword(vltPass);
            JOptionPane.showMessageDialog(null, "Password Changed Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            Settings_New_Password_Field.setText("");
            Settings_Confirm_Password_Field.setText("");
        }
    }//GEN-LAST:event_Change_Password_ButtonActionPerformed

    private void Current_Password_ToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Current_Password_ToggleButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
            Current_Password_Field.setEchoChar((char) 0);
        else
            Current_Password_Field.setEchoChar('\u2022');
    }//GEN-LAST:event_Current_Password_ToggleButtonItemStateChanged

    private void New_Key_File_Browse_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_Key_File_Browse_ButtonActionPerformed
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        if (New_Key_RadioButton.isSelected()) {
            fileChooser.setDialogTitle("Save Key File as");
            fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
            fileChooser.setSelectedFile(new java.io.File("Passwords.svlk"));
            fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Sentinel Vault Key File", "svlk"));
            if (fileChooser.showSaveDialog(null) == javax.swing.JFileChooser.APPROVE_OPTION) {
                if (fileChooser.getSelectedFile().exists()) {
                    int response = JOptionPane.showConfirmDialog(null, "The file already exists. Do you want to overwrite the file?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (response == JOptionPane.YES_OPTION) {
                        New_Key_File_Location_Field.setText(fileChooser.getSelectedFile().getAbsolutePath());
                    }
                } else
                    New_Key_File_Location_Field.setText(fileChooser.getSelectedFile().getAbsolutePath());
            }
        } else if (Existing_Key_RadioButton.isSelected()) {
            fileChooser.setDialogTitle("Select Key File");
            fileChooser.setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);
            fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Sentinel Vault Key File", "svlk"));
            if (fileChooser.showOpenDialog(null) == javax.swing.JFileChooser.APPROVE_OPTION) {
                New_Key_File_Location_Field.setText(fileChooser.getSelectedFile().getAbsolutePath());
            }
        }
    }//GEN-LAST:event_New_Key_File_Browse_ButtonActionPerformed

    private void Remove_Key_RadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Remove_Key_RadioButtonItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            New_Key_File_Location_Field.setEnabled(false);
            New_Key_File_Browse_Button.setEnabled(false);
            Change_Key_Button.setText("Remove Key File");
        } else {
            New_Key_File_Location_Field.setEnabled(true);
            New_Key_File_Browse_Button.setEnabled(true);
            if (Current_Vault_Has_Key)
                Change_Key_Button.setText("Change Key File");
            else 
                Change_Key_Button.setText("Add Key File");
        }
    }//GEN-LAST:event_Remove_Key_RadioButtonItemStateChanged

    private void Change_Key_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Key_ButtonActionPerformed
        String vltPass = new String(Current_Password_Field.getPassword());
        String valtKey = New_Key_File_Location_Field.getText();
        if (vltPass.equals("") || (!Remove_Key_RadioButton.isSelected() && valtKey.equals("")))
            JOptionPane.showMessageDialog(null, "All Fields are Required to be Filled. Please Try Again!", "Empty Feilds", JOptionPane.ERROR_MESSAGE);
        else if (Existing_Key_RadioButton.isSelected() && !new java.io.File(valtKey).exists())
            JOptionPane.showMessageDialog(null, "The Key File is not present at the specified path. Please Try Again!", "Missing Key File", JOptionPane.ERROR_MESSAGE);
        else {
            if (New_Key_RadioButton.isSelected()) {
                String Salt = com.sentinel.internal.Functions.getSalt();
                com.password4j.Hash hash = com.password4j.Password.hash(vltPass).addSalt(Salt).withPBKDF2();
                com.sentinel.internal.Functions.writeKeyFile(Salt, valtKey);
                com.sentinel.internal.SQLite.vltPassword(hash.getResult());
                String Success = Current_Vault_Has_Key ? "Key File Changed Successfully!" : "Key File Added Successfully!";
                Current_Vault_Has_Key = true;
                Current_Vault_Key_Location = valtKey;
                com.sentinel.internal.SQLite.setVaultList(Current_Vault_Location, Current_Vault_Name, Current_Vault_Has_Key, Current_Vault_Key_Location);
                JOptionPane.showMessageDialog(null, Success, "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            if (Existing_Key_RadioButton.isSelected()) {
                String Salt = com.sentinel.internal.Functions.readKeyFile(valtKey);
                com.password4j.Hash hash = com.password4j.Password.hash(vltPass).addSalt(Salt).withPBKDF2();
                com.sentinel.internal.SQLite.vltPassword(hash.getResult());
                String Success = Current_Vault_Has_Key ? "Key File Changed Successfully!" : "Key File Added Successfully!";
                Current_Vault_Has_Key = true;
                Current_Vault_Key_Location = valtKey;
                com.sentinel.internal.SQLite.setVaultList(Current_Vault_Location, Current_Vault_Name, Current_Vault_Has_Key, Current_Vault_Key_Location);
                JOptionPane.showMessageDialog(null, Success, "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            if (Remove_Key_RadioButton.isSelected()) {
                com.sentinel.internal.SQLite.vltPassword(vltPass);
                Current_Vault_Has_Key = false;
                Current_Vault_Key_Location = "";
                com.sentinel.internal.SQLite.setVaultList(Current_Vault_Location, Current_Vault_Name, Current_Vault_Has_Key, Current_Vault_Key_Location);
                JOptionPane.showMessageDialog(null, "Key File Removed Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            Current_Password_Field.setText("");
            New_Key_File_Location_Field.setText("");
            New_Key_RadioButton.setSelected(true);
            if (Current_Vault_Has_Key) {
                Current_Key_File_Location_Field.setText(Current_Vault_Key_Location);
                Current_Key_File_Location_Field.setEnabled(true);
                Change_Key_Button.setText("Change Key File");
                Remove_Key_RadioButton.setEnabled(true);
            } else {
                Current_Key_File_Location_Field.setText("This Vault does not have a Key File.");
                Current_Key_File_Location_Field.setEnabled(false);
                Change_Key_Button.setText("Add Key File");
                Remove_Key_RadioButton.setEnabled(false);
            }
        }
    }//GEN-LAST:event_Change_Key_ButtonActionPerformed

    private void Open_Vault_ActionPerformed() {
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setDialogTitle("Open Existing Vault");
        fileChooser.setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Sentinel Vault File", "svlt"));
        if (fileChooser.showOpenDialog(null) == javax.swing.JFileChooser.APPROVE_OPTION) {
            Vault_Path_Field.setText(fileChooser.getSelectedFile().getAbsolutePath());
            Container_Deck.show(Container, "open");
        }
    }

    private void Open_Vault_ActionPerformed(String vltPath) {
        OpenVault_Label.setText(" Unlock Vault : " + com.sentinel.internal.SQLite.getVaultName(vltPath));
        Vault_Path_Field.setText(vltPath);
        if (com.sentinel.internal.SQLite.getVaultHasKey(vltPath)) {
            OpenVault_Key_File_CheckBox.setSelected(true);
            OpenVault_Key_File_Location_Field.setText(com.sentinel.internal.SQLite.getVaultKeyPath(vltPath));
        } else {
            OpenVault_Key_File_CheckBox.setSelected(false);
            OpenVault_Key_File_Location_Field.setText("");
        }
        Container_Deck.show(Container, "open");
    }
    
    private void OpenVaultPage() {
        setTitle("Vault : " + Current_Vault_Name + "  \u2013  Sentinel");
        Recent_Vaults_List.setModel(com.sentinel.internal.SQLite.getVaultList());
        FolderTree.setModel(com.sentinel.internal.SQLite.allTablesList());
        Passwords_Table_Model("Root");
        Container_Deck.show(Container, "vault");
        EnableVaultDataManipulationFunctions();
        Open_Vault_Button.setEnabled(false);
        New_Vault_MenuItem.setEnabled(false);
        Open_Vault_MenuItem.setEnabled(false);
        Close_Vault_Button.setEnabled(true);
        Copy_Username_Button.setEnabled(true);
        Copy_Password_Button.setEnabled(true);
        Copy_URL_Button.setEnabled(true);
        Settings_ToggleButton.setEnabled(true);
        Close_Vault_MenuItem.setEnabled(true);
        Copy_Username_MenuItem.setEnabled(true);
        Copy_Password_MenuItem.setEnabled(true);
        Copy_URL_MenuItem.setEnabled(true);
        Settings_CheckBox_MenuItem.setEnabled(true);
    }

    private void CloseVaultPage() {
        setTitle("Sentinel");
        Container_Deck.show(Container, "start");
        DisableVaultDataManipulationFunctions();
        Open_Vault_Button.setEnabled(true);
        New_Vault_MenuItem.setEnabled(true);
        Open_Vault_MenuItem.setEnabled(true);
        Close_Vault_Button.setEnabled(false);
        Copy_Username_Button.setEnabled(false);
        Copy_Password_Button.setEnabled(false);
        Copy_URL_Button.setEnabled(false);
        Settings_ToggleButton.setEnabled(false);
        Close_Vault_MenuItem.setEnabled(false);
        Copy_Username_MenuItem.setEnabled(false);
        Copy_Password_MenuItem.setEnabled(false);
        Copy_URL_MenuItem.setEnabled(false);
        Settings_CheckBox_MenuItem.setEnabled(false);
    }

    private void EnableVaultDataManipulationFunctions() {
        New_Entry_Button.setEnabled(true);
        Edit_Entry_Button.setEnabled(true);
        Delete_Entry_Button.setEnabled(true);
        New_Entry_MenuItem.setEnabled(true);
        Edit_Entry_MenuItem.setEnabled(true);
        Delete_Entry_MenuItem.setEnabled(true);
        New_Group_MenuItem.setEnabled(true);
        Edit_Group_MenuItem.setEnabled(true);
        Delete_Group_MenuItem.setEnabled(true);
    }

    private void DisableVaultDataManipulationFunctions() {
        New_Entry_Button.setEnabled(false);
        Edit_Entry_Button.setEnabled(false);
        Delete_Entry_Button.setEnabled(false);
        New_Entry_MenuItem.setEnabled(false);
        Edit_Entry_MenuItem.setEnabled(false);
        Delete_Entry_MenuItem.setEnabled(false);
        New_Group_MenuItem.setEnabled(false);
        Edit_Group_MenuItem.setEnabled(false);
        Delete_Group_MenuItem.setEnabled(false);
    }

    private void Passwords_Table_Model(String TableName) {
        Passwords_Table.setModel(com.sentinel.internal.Functions.vltTableModel(TableName));
        Passwords_Table.getColumnModel().getColumn(0).setMinWidth(0);
        Passwords_Table.getColumnModel().getColumn(0).setMaxWidth(0);
        Passwords_Table.getColumnModel().getColumn(0).setWidth(0);
        Passwords_Table.getColumnModel().getColumn(3).setMinWidth(0);
        Passwords_Table.getColumnModel().getColumn(3).setMaxWidth(0);
        Passwords_Table.getColumnModel().getColumn(3).setWidth(0);
        Details_Username_Field.setText("");
        Details_Password_Field.setText("");
        Details_URL_Field.setText("");
        Details_Notes_TextArea.setText("");
    }

    private void New_Entry_ActionPerformed() {
        UID = "SVLT-" + new java.text.SimpleDateFormat("yyMMdd-HHmmss").format(new java.util.Date())+ "-" + com.sentinel.internal.Functions.randomID(8);
        EntryPage_Label.setText(Vault_Table_Name + " \u2022 New Entry");
        Container_Deck.show(Container, "entry");
        DisableVaultDataManipulationFunctions();
    }

    private void Edit_Entry_ActionPerformed(){
        int row = Passwords_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select an Entry to Edit.", "Entry Not Selected", JOptionPane.ERROR_MESSAGE);
        else {
            UID = Passwords_Table.getValueAt(row, 0).toString();
            Title_TextField.setText(Passwords_Table.getValueAt(row, 1).toString());
            Username_TextField.setText(Passwords_Table.getValueAt(row, 2).toString());
            Password_Field.setText(Passwords_Table.getValueAt(row, 3).toString());
            URL_TextField.setText(Passwords_Table.getValueAt(row, 4).toString());
            Notes_TextArea.setText(Passwords_Table.getValueAt(row, 5).toString());
            EntryPage_Label.setText(Vault_Table_Name + " \u2022 " + Passwords_Table.getValueAt(row, 1).toString() + " \u2022 Edit Entry");
            Container_Deck.show(Container, "entry");
            DisableVaultDataManipulationFunctions();
        }
    }

    private void Delete_Entry_ActionPerformed() {
        int row = Passwords_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select an Entry to be Deleted.", "Entry Not Selected", JOptionPane.ERROR_MESSAGE);
        else {
            int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Entry?.", "Delete Entry: " + Passwords_Table.getValueAt(row, 1).toString(), JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                com.sentinel.internal.SQLite.remTableEntry(Vault_Table_Name, Passwords_Table.getValueAt(row, 0).toString());
                Passwords_Table_Model(Vault_Table_Name);
            }
        }
    }

    private void New_Group_ActionPerformed() {
        String vltTableName = JOptionPane.showInputDialog(null, "Enter a Name:", "New Group", JOptionPane.PLAIN_MESSAGE);
        if (vltTableName != null) {
            if (!vltTableName.equals("")) {
                if (vltTableName.equals("Root"))
                    JOptionPane.showMessageDialog(null, "\"Root\" can't be used as a Group Name.", "Error", JOptionPane.ERROR_MESSAGE);
                if (vltTableName.equals("Configuration"))
                    JOptionPane.showMessageDialog(null, "\"Configuration\" can't be used as a Group Name.", "Error", JOptionPane.ERROR_MESSAGE);
                else if (com.sentinel.internal.SQLite.vltTableExists(vltTableName))
                    JOptionPane.showMessageDialog(null, "A Group Nameed \"" + vltTableName + "\" Already Exists.", "Error", JOptionPane.ERROR_MESSAGE);
                else {
                    com.sentinel.internal.SQLite.newTable(vltTableName);
                    FolderTree.setModel(com.sentinel.internal.SQLite.allTablesList());
                    Passwords_Table_Model(vltTableName);
                    Vault_Table_Name = vltTableName;
                }
            }
        }
    }

    private void Edit_Group_ActionPerformed() {
        if (Vault_Table_Name.equals("Root"))
            JOptionPane.showMessageDialog(null, "\"Root\" can't be Renamed or Deleted.", "Error", JOptionPane.ERROR_MESSAGE);
        else {
            String vltTableName = JOptionPane.showInputDialog(null, "Enter a new Name:", "Rename Group: " + Vault_Table_Name, JOptionPane.PLAIN_MESSAGE);
            if (vltTableName != null) {
                if (!vltTableName.equals("")) {
                    if (vltTableName.equals(Vault_Table_Name))
                        JOptionPane.showMessageDialog(null, "New Name is same as the Old one. Nothing to Rename.", "Error", JOptionPane.ERROR_MESSAGE);
                    else if (com.sentinel.internal.SQLite.vltTableExists(vltTableName))
                        JOptionPane.showMessageDialog(null, "A Group Nameed \"" + vltTableName + "\" Already Exists.", "Error", JOptionPane.ERROR_MESSAGE);
                    else {
                        com.sentinel.internal.SQLite.renTable(vltTableName, Vault_Table_Name);
                        FolderTree.setModel(com.sentinel.internal.SQLite.allTablesList());
                        Passwords_Table_Model(vltTableName);
                        Vault_Table_Name = vltTableName;
                    }
                }
            }
        }
    }

    private void Delete_Group_ActionPerformed() {
        if (Vault_Table_Name.equals("Root"))
            JOptionPane.showMessageDialog(null, "\"Root\" can't be Renamed or Deleted.", "Error", JOptionPane.ERROR_MESSAGE);
        else {
            int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Group? Doing this will also delete all of it's Entries.", "Delete Group: " + Vault_Table_Name, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                com.sentinel.internal.SQLite.remTable(Vault_Table_Name);
                FolderTree.setModel(com.sentinel.internal.SQLite.allTablesList());
                Passwords_Table_Model("Root");
                Vault_Table_Name = "Root";
            }
        }
    }

    private void Copy_Username_ActionPerformed() {
        int row = Passwords_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select an Entry to copy it's Username.", "Entry Not Selected", JOptionPane.ERROR_MESSAGE);
        else {
            java.awt.datatransfer.Clipboard clipboard = java.awt.Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(new java.awt.datatransfer.StringSelection(Passwords_Table.getValueAt(row, 2).toString()), null);
            Acknowledgment_Label.setText("Username Copied Successfully!     ");
            javax.swing.Timer timer = new javax.swing.Timer(2000, (java.awt.event.ActionEvent evt) -> {
                Acknowledgment_Label.setText("");
            });
            timer.setRepeats(false);
            timer.start();
        }
    }

    private void Copy_Password_ActionPerformed() {
        int row = Passwords_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select an Entry to copy it's Password.", "Entry Not Selected", JOptionPane.ERROR_MESSAGE);
        else {
            java.awt.datatransfer.Clipboard clipboard = java.awt.Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(new java.awt.datatransfer.StringSelection(Passwords_Table.getValueAt(row, 3).toString()), null);
            Acknowledgment_Label.setText("Password Copied Successfully!     ");
            javax.swing.Timer timer = new javax.swing.Timer(2000, (java.awt.event.ActionEvent evt) -> {
                Acknowledgment_Label.setText("");
            });
            timer.setRepeats(false);
            timer.start();
        }
    }

    private void Copy_URL_ActionPerformed() {
        int row = Passwords_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select an Entry to copy it's URL.", "Entry Not Selected", JOptionPane.ERROR_MESSAGE);
        else {
            java.awt.datatransfer.Clipboard clipboard = java.awt.Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(new java.awt.datatransfer.StringSelection(Passwords_Table.getValueAt(row, 4).toString()), null);
            Acknowledgment_Label.setText("URL Copied Successfully!     ");
            javax.swing.Timer timer = new javax.swing.Timer(2000, (java.awt.event.ActionEvent evt) -> {
                Acknowledgment_Label.setText("");
            });
            timer.setRepeats(false);
            timer.start();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the FlatLightLaf look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If FlatLightLaf is not available, stay with the default look and feel. */
        com.formdev.flatlaf.FlatLightLaf.setup();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("FlatLightLaf".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        javax.swing.UIManager.put("ScrollBar.thumbArc", 999);
        javax.swing.UIManager.put("ScrollBar.thumbInsets", new java.awt.Insets(2, 2, 2, 2));
        javax.swing.UIManager.put("TextArea.inactiveBackground", new javax.swing.plaf.ColorUIResource(java.awt.Color.WHITE));
        javax.swing.UIManager.put("TextField.inactiveBackground", new javax.swing.plaf.ColorUIResource(java.awt.Color.WHITE));
        javax.swing.UIManager.put("PasswordField.inactiveBackground", new javax.swing.plaf.ColorUIResource(java.awt.Color.WHITE));
        javax.swing.UIManager.put("Table.alternateRowColor", new javax.swing.plaf.ColorUIResource(new java.awt.Color(242, 242, 242)));
        if (com.formdev.flatlaf.util.SystemInfo.isLinux) {
            javax.swing.UIManager.put("MenuBar.background", new javax.swing.plaf.ColorUIResource(new java.awt.Color(242, 242, 242)));
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
        
        Runtime.getRuntime().addShutdownHook(new Thread() {
            @Override
            public void run() {
                com.sentinel.internal.SQLite.closeVault();
                com.sentinel.internal.SQLite.closeVaultList();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton About_Button;
    private javax.swing.JMenuItem About_MenuItem;
    private javax.swing.JLabel Acknowledgment_Label;
    private javax.swing.JButton Browse_Button;
    private javax.swing.JButton Change_Key_Button;
    private javax.swing.JButton Change_Password_Button;
    private javax.swing.JButton Change_Vault_Name_Button;
    private javax.swing.JButton Clear_List_Button;
    private javax.swing.JButton Close_Button;
    private javax.swing.JButton Close_Vault_Button;
    private javax.swing.JMenuItem Close_Vault_MenuItem;
    private javax.swing.JPasswordField Confirm_Password_Field;
    private javax.swing.JLabel Confirm_Password_Label;
    private javax.swing.JToggleButton Confirm_Password_ToggleButton;
    private javax.swing.JPanel Container;
    private javax.swing.JButton Copy_Password_Button;
    private javax.swing.JMenuItem Copy_Password_MenuItem;
    private javax.swing.JButton Copy_URL_Button;
    private javax.swing.JMenuItem Copy_URL_MenuItem;
    private javax.swing.JButton Copy_Username_Button;
    private javax.swing.JMenuItem Copy_Username_MenuItem;
    private javax.swing.JLabel Current_Key_File_Label;
    private javax.swing.JTextField Current_Key_File_Location_Field;
    private javax.swing.JPasswordField Current_Password_Field;
    private javax.swing.JLabel Current_Password_Label;
    private javax.swing.JToggleButton Current_Password_ToggleButton;
    private javax.swing.JButton Delete_Entry_Button;
    private javax.swing.JMenuItem Delete_Entry_MenuItem;
    private javax.swing.JMenuItem Delete_Group_MenuItem;
    private javax.swing.JScrollPane Details_Notes_ScrollPane;
    private javax.swing.JTextArea Details_Notes_TextArea;
    private javax.swing.JPanel Details_Panel;
    private javax.swing.JPasswordField Details_Password_Field;
    private javax.swing.JPanel Details_Password_Panel;
    private javax.swing.JToggleButton Details_Password_ToggleButton;
    private javax.swing.JTextField Details_URL_Field;
    private javax.swing.JPanel Details_URL_Panel;
    private javax.swing.JTextField Details_Username_Field;
    private javax.swing.JPanel Details_Username_Panel;
    private javax.swing.JButton Edit_Entry_Button;
    private javax.swing.JMenuItem Edit_Entry_MenuItem;
    private javax.swing.JMenuItem Edit_Group_MenuItem;
    private javax.swing.JMenu Edit_Menu;
    private javax.swing.JPopupMenu.Separator Edit_Menu_Separator_One;
    private javax.swing.JPopupMenu.Separator Edit_Menu_Separator_Two;
    private javax.swing.JPanel EntryPage;
    private javax.swing.JButton EntryPage_Cancel_Button;
    private javax.swing.JPanel EntryPage_Container;
    private javax.swing.JButton EntryPage_Finish_Button;
    private javax.swing.JLabel EntryPage_Label;
    private javax.swing.JRadioButton Existing_Key_RadioButton;
    private javax.swing.JMenuItem Exit_MenuItem;
    private javax.swing.JTree FolderTree;
    private javax.swing.JPopupMenu FolderTree_PopupMenu;
    private javax.swing.JScrollPane FolderTree_ScrollPane;
    private javax.swing.JButton Generate_New_Password_Button;
    private javax.swing.JButton Generate_Password_Button;
    private javax.swing.JButton Generate_Vault_Password_Button;
    private javax.swing.JMenu Help_Menu;
    private javax.swing.JButton Key_File_Browse_Button;
    private javax.swing.ButtonGroup Key_File_ButtonGroup;
    private javax.swing.JCheckBox Key_File_CheckBox;
    private javax.swing.JLabel Key_File_Label;
    private javax.swing.JTextField Key_File_Location_Field;
    private javax.swing.JToolBar Main_ToolBar;
    private javax.swing.JMenuBar Menu_Bar;
    private javax.swing.JPanel NewVaultPage;
    private javax.swing.JButton NewVault_Cancel_Button;
    private javax.swing.JPanel NewVault_Container;
    private javax.swing.JButton NewVault_Finish_Button;
    private javax.swing.JLabel NewVault_Label;
    private javax.swing.JButton New_Entry_Button;
    private javax.swing.JMenuItem New_Entry_MenuItem;
    private javax.swing.JMenuItem New_Group_MenuItem;
    private javax.swing.JButton New_Key_File_Browse_Button;
    private javax.swing.JLabel New_Key_File_Label;
    private javax.swing.JTextField New_Key_File_Location_Field;
    private javax.swing.JRadioButton New_Key_RadioButton;
    private javax.swing.JMenuItem New_Vault_MenuItem;
    private javax.swing.JLabel Notes_Label;
    private javax.swing.JScrollPane Notes_ScrollPane;
    private javax.swing.JTextArea Notes_TextArea;
    private javax.swing.JPanel OpenVaultPage;
    private javax.swing.JPanel OpenVault_Container;
    private javax.swing.JButton OpenVault_Key_File_Browse_Button;
    private javax.swing.JCheckBox OpenVault_Key_File_CheckBox;
    private javax.swing.JLabel OpenVault_Key_File_Label;
    private javax.swing.JPasswordField OpenVault_Key_File_Location_Field;
    private javax.swing.JToggleButton OpenVault_Key_File_ToggleButton;
    private javax.swing.JLabel OpenVault_Label;
    private javax.swing.JPasswordField OpenVault_Password_Field;
    private javax.swing.JLabel OpenVault_Password_Label;
    private javax.swing.JToggleButton OpenVault_Password_ToggleButton;
    private javax.swing.JButton Open_Vault_Button;
    private javax.swing.JMenuItem Open_Vault_MenuItem;
    private javax.swing.JPasswordField Password_Field;
    private javax.swing.JToggleButton Password_Field_ToggleButton;
    private javax.swing.JButton Password_Generator_Button;
    private javax.swing.JMenuItem Password_Generator_MenuItem;
    private javax.swing.JLabel Password_Label;
    private javax.swing.JTable Passwords_Table;
    private javax.swing.JPopupMenu Passwords_Table_PopupMenu;
    private javax.swing.JScrollPane Passwords_Table_ScrollPane;
    private javax.swing.JLabel Recent_Vaults_Label;
    private javax.swing.JList<String> Recent_Vaults_List;
    private javax.swing.JScrollPane Recent_Vaults_ScrollPane;
    private javax.swing.JRadioButton Remove_Key_RadioButton;
    private javax.swing.JPanel SettingsPage;
    private javax.swing.JCheckBoxMenuItem Settings_CheckBox_MenuItem;
    private javax.swing.JPasswordField Settings_Confirm_Password_Field;
    private javax.swing.JLabel Settings_Confirm_Password_Label;
    private javax.swing.JToggleButton Settings_Confirm_Password_ToggleButton;
    private javax.swing.JPanel Settings_Key_File_Panel;
    private javax.swing.JPasswordField Settings_New_Password_Field;
    private javax.swing.JLabel Settings_New_Password_Label;
    private javax.swing.JToggleButton Settings_New_Password_ToggleButton;
    private javax.swing.JPanel Settings_Password_Panel;
    private javax.swing.JToggleButton Settings_ToggleButton;
    private javax.swing.JTextField Settings_Vault_Name_Field;
    private javax.swing.JLabel Settings_Vault_Name_Label;
    private javax.swing.JPanel Settings_Vault_Name_Panel;
    private javax.swing.JPanel StartPage;
    private javax.swing.JButton StartPage_Create_Vault_Button;
    private javax.swing.JButton StartPage_Open_Vault_Button;
    private javax.swing.JMenuItem Table_PopupMenu_Copy_Password;
    private javax.swing.JMenuItem Table_PopupMenu_Copy_URL;
    private javax.swing.JMenuItem Table_PopupMenu_Copy_Username;
    private javax.swing.JMenuItem Table_PopupMenu_Delete_Entry;
    private javax.swing.JMenuItem Table_PopupMenu_Edit_Entry;
    private javax.swing.JMenuItem Table_PopupMenu_New_Entry;
    private javax.swing.JPopupMenu.Separator Table_PopupMenu_Separator;
    private javax.swing.JLabel Title_Label;
    private javax.swing.JTextField Title_TextField;
    private javax.swing.Box.Filler ToolBar_Filler;
    private javax.swing.JToolBar.Separator ToolBar_Separator_One;
    private javax.swing.JToolBar.Separator ToolBar_Separator_Three;
    private javax.swing.JToolBar.Separator ToolBar_Separator_Two;
    private javax.swing.JMenu Tools_Menu;
    private javax.swing.JMenuItem Tree_PopupMenu_Delete_Group;
    private javax.swing.JMenuItem Tree_PopupMenu_Edit_Group;
    private javax.swing.JMenuItem Tree_PopupMenu_New_Group;
    private javax.swing.JLabel URL_Label;
    private javax.swing.JTextField URL_TextField;
    private javax.swing.JButton Unlock_Button;
    private javax.swing.JLabel Username_Label;
    private javax.swing.JTextField Username_TextField;
    private javax.swing.JPanel VaultPage;
    private javax.swing.JPanel Vault_Actions_Panel;
    private javax.swing.JTextField Vault_Location_Field;
    private javax.swing.JLabel Vault_Location_Label;
    private javax.swing.JMenu Vault_Menu;
    private javax.swing.JPopupMenu.Separator Vault_Menu_Separator_One;
    private javax.swing.JTextField Vault_Name_Field;
    private javax.swing.JLabel Vault_Name_Label;
    private javax.swing.JPasswordField Vault_Password_Field;
    private javax.swing.JLabel Vault_Password_Label;
    private javax.swing.JToggleButton Vault_Password_ToggleButton;
    private javax.swing.JTextField Vault_Path_Field;
    private javax.swing.JLabel Vault_Path_Label;
    private javax.swing.JLabel Welcome_Label;
    // End of variables declaration//GEN-END:variables
    private final java.awt.CardLayout Container_Deck;
    private String Current_Vault_Key_Location;
    private boolean Current_Vault_Has_Key;
    private String Current_Vault_Location;
    private String Current_Vault_Name;
    private String Vault_Table_Name;
    private final String Version;
    private String UID;
}
